{
  "templates": [
    {
      "type": 1,
      "title": "Registry",
      "description": "Docker image registry",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ]
    },
    {
      "type": 1,
      "title": "Registry (cache)",
      "description": "Docker image registry configured as a DockerHub pull through cache",
      "categories": ["docker"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/registry.png",
      "image": "registry:latest",
      "ports": ["5000/tcp"],
      "volumes": [
        {
          "container": "/var/lib/registry"
        }
      ],
      "env": [
        {
          "name": "REGISTRY_PROXY_REMOTEURL",
          "default": "https://registry-1.docker.io",
          "preset": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Ubuntu",
      "description": "Debian-based Linux operating system",
      "categories": ["operating-system"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ubuntu.png",
      "image": "ubuntu:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "NodeJS",
      "description": "JavaScript-based platform for server-side and networking applications",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/node.png",
      "image": "node:latest",
      "interactive": true,
      "command": "/bin/bash"
    },
    {
      "type": 1,
      "title": "Nginx",
      "description": "High performance web server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/nginx.png",
      "image": "nginx:latest",
      "ports": ["80/tcp", "443/tcp"],
      "volumes": [
        {
          "container": "/etc/nginx"
        },
        {
          "container": "/usr/share/nginx/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Httpd",
      "description": "Open-source HTTP server",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/httpd.png",
      "image": "httpd:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/usr/local/apache2/htdocs/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Caddy",
      "description": "Open-source web server with automatic HTTPS written in Go",
      "categories": ["webserver"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/caddy.png",
      "image": "caddy:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "MySQL",
      "description": "The most popular open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mysql.png",
      "image": "mysql/mysql-server:5.7",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        },
        {
          "name": "MYSQL_ROOT_HOST",
          "default": "%",
          "preset": true
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "MariaDB",
      "description": "Performance beyond MySQL",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mariadb.png",
      "image": "mariadb:latest",
      "env": [
        {
          "name": "MYSQL_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "ports": ["3306/tcp"],
      "volumes": [
        {
          "container": "/var/lib/mysql"
        }
      ]
    },
    {
      "type": 1,
      "title": "PostgreSQL",
      "description": "The most advanced open-source database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/postgres.png",
      "image": "postgres:latest",
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Superuser"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Superuser password"
        }
      ],
      "ports": ["5432/tcp"],
      "volumes": [
        {
          "container": "/var/lib/postgresql/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Mongo",
      "description": "Open-source document-oriented database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mongo.png",
      "image": "mongo:latest",
      "ports": ["27017/tcp"],
      "volumes": [
        {
          "container": "/data/db"
        }
      ]
    },
    {
      "type": 1,
      "title": "CrateDB",
      "description": "An open-source distributed SQL database",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cratedb.png",
      "image": "crate:latest",
      "ports": ["4200/tcp", "4300/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Elasticsearch",
      "description": "Open-source search and analytics engine",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/elasticsearch.png",
      "image": "docker.elastic.co/elasticsearch/elasticsearch:7.15.1",
      "ports": ["9200/tcp", "9300/tcp"],
      "volumes": [
        {
          "container": "/usr/share/elasticsearch/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Gitlab CE",
      "description": "Open-source end-to-end software development platform",
      "note": "Default username is <b>root</b>. Check the <a href=\"https://docs.gitlab.com/omnibus/docker/README.html#after-starting-a-container\" target=\"_blank\">Gitlab documentation</a> to get started.",
      "categories": ["development", "project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/gitlab_ce.png",
      "image": "gitlab/gitlab-ce:latest",
      "ports": ["80/tcp", "443/tcp", "22/tcp"],
      "volumes": [
        {
          "container": "/etc/gitlab"
        },
        {
          "container": "/var/log/gitlab"
        },
        {
          "container": "/var/opt/gitlab"
        }
      ]
    },
    {
      "type": 1,
      "title": "Minio",
      "description": "A distributed object storage server built for cloud applications and devops",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/minio.png",
      "image": "quay.io/minio/minio:latest",
      "ports": ["9000/tcp", "9001/tcp"],
      "env": [
        {
          "name": "MINIO_ROOT_USER",
          "label": "Root user"
        },
        {
          "name": "MINIO_ROOT_PASSWORD",
          "label": "Root password"
        }
      ],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/root/.minio"
        }
      ],
      "command": "server /data --console-address ':9001'"
    },
    {
      "type": 1,
      "title": "Scality S3",
      "description": "Standalone AWS S3 protocol server",
      "categories": ["storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/scality-s3.png",
      "image": "scality/s3server",
      "ports": ["8000/tcp"],
      "env": [
        {
          "name": "SCALITY_ACCESS_KEY",
          "label": "Scality S3 access key"
        },
        {
          "name": "SCALITY_SECRET_KEY",
          "label": "Scality S3 secret key"
        }
      ],
      "volumes": [
        {
          "container": "/usr/src/app/localData"
        },
        {
          "container": "/usr/src/app/localMetadata"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server on Linux",
      "categories": ["database"],
      "platform": "linux",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "mcr.microsoft.com/mssql/server:2019-latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "SA_PASSWORD",
          "label": "SA password"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server",
      "description": "Microsoft SQL Server Developer for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-developer:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "SQL Server Express",
      "description": "Microsoft SQL Server Express for Windows containers",
      "categories": ["database"],
      "platform": "windows",
      "note": "Password needs to include at least 8 characters including uppercase, lowercase letters, base-10 digits and/or non-alphanumeric symbols.",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "image": "microsoft/mssql-server-windows-express:latest",
      "ports": ["1433/tcp"],
      "env": [
        {
          "name": "ACCEPT_EULA",
          "default": "Y",
          "preset": true
        },
        {
          "name": "sa_password",
          "label": "SA password"
        }
      ],
      "volumes": [
        {
          "container": "C:/temp/"
        }
      ]
    },
    {
      "type": 1,
      "title": "Solr",
      "description": "Open-source enterprise search platform",
      "categories": ["search-engine"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/solr.png",
      "image": "solr:latest",
      "ports": ["8983/tcp"],
      "volumes": [
        {
          "container": "/opt/solr/mydata"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redis",
      "description": "Open-source in-memory data structure store",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "image": "redis:latest",
      "ports": ["6379/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
		{
			"type": 2,
			"title": "Swarm monitoring",
			"description": "Monitor your cluster performances with Prometheus & Grafana",
			"note": "Requires Docker version 19.03.0+. <b>Make sure to add the <code>monitoring == true</code> one of your Swarm manager node before deploying this stack.</b>",
			"categories": [
				"Monitoring"
			],
			"platform": "linux",
			"logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
			"repository": {
				"url": "https://github.com/portainer/templates",
				"stackfile": "swarm/monitoring/docker-compose.yml"
			},
			"env": [
				{
					"name": "GRAFANA_USER",
					"label": "Grafana admin user",
					"default": "admin"
				},
				{
					"name": "GRAFANA_PASSWORD",
					"label": "Grafana admin password"
				}
			]
		},    
    {
      "type": 2,
      "title": "Redis Cluster",
      "description": "Open-source in-memory data structure store - Cluster mode",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redis.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/redis-cluster/docker-stack.yaml"
      },
      "env": [
        {
          "name": "REDIS_PASSWD",
          "label": "Redis password"
        }
      ]
    },
    {
      "type": 1,
      "title": "RabbitMQ",
      "description": "Highly reliable enterprise messaging system",
      "categories": ["messaging"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/rabbitmq.png",
      "image": "rabbitmq:latest",
      "ports": ["5671/tcp", "5672/tcp"],
      "volumes": [
        {
          "container": "/var/lib/rabbitmq"
        }
      ]
    },
    {
      "type": 1,
      "title": "Ghost",
      "description": "Free and open-source blogging platform",
      "categories": ["blog"],
      "note": "Access the blog management interface under <code>/ghost/</code>.",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ghost.png",
      "image": "ghost:latest",
      "ports": ["2368/tcp"],
      "volumes": [
        {
          "container": "/var/lib/ghost/content"
        }
      ]
    },
    {
      "type": 1,
      "title": "Joomla",
      "description": "Another free and open-source CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/joomla.png",
      "image": "joomla:latest",
      "env": [
        {
          "name": "JOOMLA_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "JOOMLA_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Drupal",
      "description": "Open-source content management framework",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/drupal.png",
      "image": "drupal:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Plone",
      "description": "A free and open-source CMS built on top of Zope",
      "note": "Default user and password are admin/admin",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/plone.png",
      "image": "plone:latest",
      "ports": ["8080/tcp"],
      "volumes": [
        {
          "container": "/data"
        }
      ]
    },
    {
      "type": 1,
      "title": "Sematext Docker Agent",
      "description": "Collect logs, metrics and docker events",
      "categories": ["Log Management", "Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "image": "sematext/sematext-agent-docker:latest",
      "name": "sematext-agent",
      "privileged": true,
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock"
        }
      ]
    },
    {
      "type": 1,
      "title": "Datadog agent",
      "description": "Collect events and metrics",
      "categories": ["Monitoring"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "image": "datadog/agent:latest",
      "env": [
        {
          "name": "DD_API_KEY",
          "label": "Datadog API key"
        }
      ],
      "volumes": [
        {
          "container": "/var/run/docker.sock",
          "bind": "/var/run/docker.sock",
          "readonly": true
        },
        {
          "container": "/host/sys/fs/cgroup",
          "bind": "/sys/fs/cgroup",
          "readonly": true
        },
        {
          "container": "/host/proc",
          "bind": "/proc",
          "readonly": true
        }
      ]
    },
    {
      "type": 1,
      "title": "Mautic",
      "description": "Open-source marketing automation platform",
      "categories": ["marketing"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/mautic.png",
      "image": "mautic/mautic:latest",
      "env": [
        {
          "name": "MAUTIC_DB_HOST",
          "label": "MySQL database host",
          "type": "container"
        },
        {
          "name": "MAUTIC_DB_PASSWORD",
          "label": "Database password"
        }
      ],
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/var/www/html"
        }
      ]
    },
    {
      "type": 1,
      "title": "Jenkins",
      "description": "Open-source continuous integration tool",
      "categories": ["continuous-integration"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/jenkins.png",
      "image": "jenkins/jenkins:lts-jdk11",
      "ports": ["8080/tcp", "50000/tcp"],
      "volumes": [
        {
          "container": "/var/jenkins_home"
        }
      ]
    },
    {
      "type": 1,
      "title": "Redmine",
      "description": "Open-source project management tool",
      "note": "Default user and password are admin/admin",
      "categories": ["project-management"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/redmine.png",
      "image": "redmine:latest",
      "ports": ["3000/tcp"],
      "volumes": [
        {
          "container": "/usr/src/redmine/files"
        }
      ]
    },
    {
      "type": 1,
      "title": "File browser",
      "description": "A web file manager",
      "note": "Default credentials: admin/admin",
      "categories": ["filesystem", "storage"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/filebrowser.png",
      "image": "filebrowser/filebrowser:latest",
      "ports": ["80/tcp"],
      "volumes": [
        {
          "container": "/data"
        },
        {
          "container": "/srv"
        }
      ],
      "command": "--port 80 --database /data/database.db --root /srv"
    },
    {
      "type": 1,
      "title": "CommandBox",
      "description": "ColdFusion (CFML) CLI",
      "categories": ["development"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-commandbox.png",
      "image": "ortussolutions/commandbox:latest",
      "env": [
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"]
    },
    {
      "type": 1,
      "title": "ContentBox",
      "description": "Open-source modular CMS",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ortussolutions-contentbox.png",
      "image": "ortussolutions/contentbox:latest",
      "env": [
        {
          "name": "express",
          "default": "true",
          "preset": true
        },
        {
          "name": "install",
          "default": "true",
          "preset": true
        },
        {
          "name": "CFENGINE",
          "default": "lucee@4.5",
          "preset": true
        }
      ],
      "ports": ["8080/tcp", "8443/tcp"],
      "volumes": [
        {
          "container": "/data/contentbox/db"
        },
        {
          "container": "/app/includes/shared/media"
        }
      ]
    },
    {
      "type": 1,
      "title": "Dokku",
      "description": "Dokku setup as a container",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "image":"dokku/dokku",
      "ports": ["22/tcp", "80/tcp", "443/tcp"],
      "volumes": [{
        "container": "/mnt/dokku",
        "bind": "/var/lib/dokku"
      },
      {
        "container": "/var/run/docker.sock",
        "bind": "/var/run/docker.sock"
      }],
      "env":[
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "default": "/var/lib/dokku/home/dokku",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'"
        }
      ]
    },
    {
      "type": 1,
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications. The OPC Router connects PLCs, PCS, SCADA, MES, SQL databases and servers, label printers, e-mail servers and erp-systems via OPC UA, MQTT, REST, CSV and many others without any programming effort",
      "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/opc-router.png",
      "image": "opcrouter/runtime:latest",
      "ports": ["49429/tcp", "8080/tcp", "8081/tcp"],
      "env": [
        {
          "name": "INITIAL_USERNAME",
          "label": "Initial Admin User user"
        },
        {
          "name": "INITIAL_PASSWORD",
          "label": "Inital Admin User Password"
        },
        {
          "name": "OR_I_ACCEPT_EULA",
          "label": "Accept EULA",
          "select": [
            {
              "text": "Yes, I accept",
              "value": "true",
              "default": true
            }
          ]
        }
      ],
      "volumes": [
        {
          "container": "/data/database"
        },
        {
          "container": "/inray"
        },
	      {
          "container": "/var/log/opcrouter"
        }      
      ]
    },
    {
      "type": 1,
      "title": "Floating License Server",
      "description": "License Server for Softing edgeConnector products",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/floating-license-server:latest",
      "ports": ["6200/tcp"],
      "interactive": true,
      "volumes": [
        {
          "container": "/licsrv/licenses"
        }
      ]
    },
    {
      "type": 1,
      "title": "EdgeConnector Modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-modbus:latest",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 1,
      "title": "EdgeConnector 840D",
      "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-840d",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 1,
      "title": "EdgeConnector Siemens",
      "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-siemens",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"]
    },
    {
      "type": 1,
      "title": "EdgeConnector FANUC CNC",
      "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeconnector-fanuc-cnc",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/mqtt"
        }     
      ]
    },
    {
      "type": 1,
      "title": "EdgeConnector Aggregator",
      "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/softing.png",
      "image": "softingindustrial/edgeaggregator",
      "ports": ["443/tcp", "8099/tcp", "4897/tcp"],
      "env": [
        {
          "name": "TZ",
          "label": "TZ"
        }
      ],
      "volumes": [
        {
          "container": "/config"
        },
        {
          "container": "/mqtt"
        }     
      ]
    },
    {
      "type": 2,
      "title": "Portainer Agent",
      "description": "Manage all the resources in your Swarm cluster",
      "note": "The agent will be deployed globally inside your cluster and available on port 9001.",
      "categories": ["portainer"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/portainer.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/portainer-agent/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "OpenFaaS",
      "name": "func",
      "description": "Serverless functions made simple",
      "note": "Deploys the API gateway and sample functions. You can access the UI on port 8080. <b>Warning</b>: the name of the stack must be 'func'.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/openfaas.png",
      "repository": {
        "url": "https://github.com/openfaas/faas",
        "stackfile": "docker-compose.yml"
      }
    },
    {
      "type": 2,
      "title": "IronFunctions",
      "description": "Open-source serverless computing platform",
      "note": "Deploys the IronFunctions API and UI.",
      "categories": ["serverless"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/ironfunctions.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/ironfunctions/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "CockroachDB",
      "description": "CockroachDB cluster",
      "note": "Deploys an insecure CockroachDB cluster, please refer to <a href=\"https://www.cockroachlabs.com/docs/stable/orchestrate-cockroachdb-with-docker-swarm.html\" target=\"_blank\">CockroachDB documentation</a> for production deployments.",
      "categories": ["database"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cockroachdb.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/cockroachdb/docker-stack.yml"
      }
    },
    {
      "type": 2,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-stack.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "WordPress",
      "description": "WordPress setup with a MySQL database",
      "note": "Deploys a WordPress instance connected to a MySQL database.",
      "categories": ["CMS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/wordpress.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/wordpress/docker-compose.yml"
      },
      "env": [
        {
          "name": "MYSQL_DATABASE_PASSWORD",
          "label": "Database root password",
          "description": "Password used by the MySQL root user."
        }
      ]
    },
    {
      "type": 3,
      "title": "OpenAMT",
      "description": "OpenAMT Cloud Toolkit",
      "note": "MPS password needs to be 8-32 characters including one uppercase, one lowercase letters, one base-10 digit and one special character.",
      "categories": ["Cloud"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/openamt/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_USER",
          "label": "Database user"
        },
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Database password"
        },
        {
          "name": "MPS_USER",
          "label": "MPS user"
        },
        {
          "name": "MPS_PASSWORD",
          "label": "MPS password"
        },
        {
          "name": "MPS_COMMON_NAME",
          "label": "MPS URL",
          "description": "Used to connect to the MPS API."
        },
        {
          "name": "MPS_SECRET",
          "label": "MPS Secret",
          "description": "Strong secret key used to log into MPS."
        },
        {
          "name": "VAULT_SECRET",
          "label": "Vault secret",
          "description": "Secret token used to log into Vault (don't include '.' character)."
        }
      ]
    },
    {
      "type": 2,
      "title": "Microsoft OMS Agent",
      "description": "Microsoft Operations Management Suite Linux agent.",
      "categories": ["OPS"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/microsoft.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/microsoft-oms/docker-stack.yml"
      },
      "env": [
        {
          "name": "AZURE_WORKSPACE_ID",
          "label": "Workspace ID",
          "description": "Azure Workspace ID"
        },
        {
          "name": "AZURE_PRIMARY_KEY",
          "label": "Primary key",
          "description": "Azure primary key"
        }
      ]
    },
    {
      "title": "Sematext Docker Agent",
      "type": 2,
      "categories": ["Log Management", "Monitoring"],
      "description": "Collect logs, metrics and docker events",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/sematext_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/sematext-agent-docker/docker-stack.yml"
      },
      "env": [
        {
          "name": "LOGSENE_TOKEN",
          "label": "Logs token"
        },
        {
          "name": "SPM_TOKEN",
          "label": "SPM monitoring token"
        }
      ]
    },
    {
      "title": "Datadog agent",
      "type": 2,
      "categories": ["Monitoring"],
      "description": "Collect events and metrics",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/datadog_agent.png",
      "platform": "linux",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/datadog-agent/docker-stack.yml"
      },
      "env": [
        {
          "name": "API_KEY",
          "label": "Datadog API key"
        }
      ]
    },
    {
      "type": 3,
      "title": "FDO",
      "description": "FDO",
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/intel.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/fdo/docker-stack.yml"
      },
      "env": [
        {
          "name": "owner_api_user",
          "label": "API Username"
        },
        {
          "name": "owner_api_password",
          "label": "API Password"
        }
      ]
    },
    {
      "type": 3,
      "title": "Dokku",
      "description": "Dokku setup as a compose file",
      "categories": ["PaaS"],
      "platform": "linux",
      "logo": "",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/dokku/docker-compose.yml"
      },
      "env": [
        {
          "name": "VERSION",
          "label": "Dokku version",
          "description": "Version of Dokku to use ('latest' if empty)",
          "default": "latest"
        },
        {
          "name": "DOKKU_HOSTNAME",
          "label": "Dokku hostname",
          "description": "Global hostname to be registered by Dokku"
        },
        {
          "name": "VOLUME_PATH",
          "label": "Dokku volume path",
          "description": "Host path to be bound to /mnt/dokku (`/var/lib/dokku` if empty)",
          "default": "/var/lib/dokku"
        },
        {
          "name": "DOKKU_HOST_ROOT",
          "label": "Dokku host root",
          "description": "Image build cache path. Generally set to <data dir> + '/home/dokku'",
          "default": "/var/lib/dokku/home/dokku"
        },
        {
          "name": "SSH_PORT",
          "label": "SSH port",
          "description": "Host port to expose SSH port of Dokku (22 if empty)",
          "default": "22"
        },
        {
          "name": "HTTP_PORT",
          "label": "HTTP port",
          "description": "Host port to expose HTTP port of Dokku (80 if empty)",
          "default": "80"
        },
        {
          "name": "HTTPS_PORT",
          "label": "HTTPS port",
          "description": "Host port to expose HTTPS port of Dokku (443 if empty)",
          "default": "443"
        }
      ]
    },
    {
      "type": 2,
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch stack with gateway, caching, database and media server",
      "categories": ["media"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/liveswitch/docker-stack.yml"
      },
      "env": [
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres password"
        }
      ]
    },
    {
      "type": 3,
      "title": "LiveSwitch",
      "description": "A basic LiveSwitch compose with gateway, caching, database and media server",
      "categories": ["media"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/liveswitch.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/liveswitch/docker-compose.yml"
      },
      "env": [
        {
          "name": "POSTGRES_PASSWORD",
          "label": "Postgres password"
        }
      ]
    },
    {
      "type": 3,
      "title": "TOSIBOX Lock for Container",
      "description": "Lock for Container brings secure connectivity inside your industrial IoT devices",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/tosibox.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "stacks/tosibox/docker-compose.yml"
      },
      "env": [
        {
          "name": "LICENSE_KEY",
          "label": "License key"
        }
      ]
    },
    {
      "type": 3,
      "title": "Pro Mosquitto with Management Center",
      "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
      "note": "The Mosquitto broker password must be at least 12 characters.",
      "categories": ["edge"],
      "platform": "linux",
      "logo": "https://portainer-io-assets.sfo2.digitaloceanspaces.com/logos/cedalo.png",
      "repository": {
        "url": "https://github.com/portainer/templates",
        "stackfile": "edge/cedalo-mosquitto-mc/docker-compose.yml"
      },
      "env": [
        {
          "name": "CEDALO_LICENSE_KEY",
          "label": "License key"
        },
        {
          "name": "CEDALO_MOSQUITTO_PASSWORD",
          "label": "Mosquitto password"
        },
        {
          "name": "CEDALO_MC_USER",
          "label": "Management Center username",
          "default": "cedalo"
        },
        {
          "name": "CEDALO_MC_PASSWORD",
          "label": "Management Center password"
        }
      ]
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector modbus",
      "description": "Connect Modbus TCP Sensors/PLCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-modbus/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector 840D",
      "description": "Access Siemens SINUMERIK 840D sl/pl controllers and provide data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-840d/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector Siemens",
      "description": "Connect Siemens SIMATIC S7-300/400/1200/1500 PLCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-siemens/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector FANUC CNC",
      "description": "Connect FANUC CNCs and provide the data via OPC UA and MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-fanuc-cnc/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Softing EdgeConnector Aggregator",
      "description": "Offers a powerful OPC UA aggregation service which provides data via OPC UA, as well as MQTT",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/softing-edgeconnector-aggregator/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "OPC Router",
      "description": "No-code middleware for industrial applications",
      "note": "More information about the <a href=\"https://www.opc-router.com/terms-of-use-and-eula/?utm_source=DockerHub_runtime&utm_medium=click&utm_campaign=TermsOfUseAndEula\" target=\"_blank\">EULA</a>.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/opc-router/docker-compose.yml"
    },
    {
      "type": 4,
      "title": "Pro Mosquitto with Management Center",
      "description": "Commercial-grade Mosquitto MQTT broker with Management Center",
      "note": "Use <b>admin</b> as the default username to connect to the Management Center.",
      "stackfile": "https://raw.githubusercontent.com/portainer/templates/master/edge/cedalo-mosquitto-mc/docker-compose.yml"
    },
    
    {
      "description": "[Adguardhome-sync](https://github.com/bakito/adguardhome-sync/) is a tool to synchronize AdGuardHome config to replica instances.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/config/adguardhome-sync.yaml",
          "description": "Set a custom config file.",
          "label": "CONFIGFILE",
          "name": "CONFIGFILE"
        }
      ],
      "image": "linuxserver/adguardhome-sync:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/adguardhomesync-icon.png",
      "name": "Adguardhome-sync",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/adguardhome-sync/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Adguardhome-sync",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/adguardhome-sync/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Airsonic-advanced](https://github.com/airsonic-advanced/airsonic-advanced) is a free, web-based media streamer, providing ubiquitious access to your music. Use it to share your music with friends, or to listen to your own music while at work. You can stream to multiple players simultaneously, for instance to one player in your kitchen and another in your living room.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "For setting url-base in reverse proxy setups.",
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH"
        },
        {
          "default": "",
          "description": "For passing additional java options.",
          "label": "JAVA_OPTS",
          "name": "JAVA_OPTS"
        }
      ],
      "image": "linuxserver/airsonic-advanced:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/airsonic-banner.png",
      "name": "Airsonic-advanced",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/airsonic-advanced/config<br>mkdir -p /volume1/docker/airsonic-advanced/music<br>mkdir -p /volume1/docker/airsonic-advanced/playlists<br>mkdir -p /volume1/docker/airsonic-advanced/podcasts<br>mkdir -p /volume1/docker/airsonic-advanced/media</p>",
      "platform": "linux",
      "ports": [
        "4040:4040/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Airsonic-advanced",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/airsonic-advanced/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/airsonic-advanced/music",
          "container": "/music"
        },
        {
          "bind": "/volume1/docker/airsonic-advanced/playlists",
          "container": "/playlists"
        },
        {
          "bind": "/volume1/docker/airsonic-advanced/podcasts",
          "container": "/podcasts"
        },
        {
          "bind": "/volume1/docker/airsonic-advanced/media",
          "container": "/media"
        }
      ]
    },
    {
      "categories": [
        "Notifications"
      ],
      "description": "[Apprise-api](https://github.com/caronc/apprise-api) Takes advantage of [Apprise](https://github.com/caronc/apprise) through your network with a user-friendly API. * Send notifications to more then 65+ services. * An incredibly lightweight gateway to Apprise. * A production ready micro-service at your disposal. Apprise API was designed to easily fit into existing (and new) eco-systems that are looking for a simple notification solution.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/apprise-api:latest",
      "logo": "https://raw.githubusercontent.com/caronc/apprise-api/master/apprise_api/static/logo.png",
      "name": "Apprise-api",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/apprise-api/config</p>",
      "platform": "linux",
      "ports": [
        "8000:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Apprise-api",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/apprise-api/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Audacity](https://www.audacityteam.org/) is an easy-to-use, multi-track audio editor and recorder. Developed by a group of volunteers as open source.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/audacity:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/audacity-logo.png",
      "name": "Audacity",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/audacity/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Audacity",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/audacity/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Babybuddy](https://github.com/babybuddy/babybuddy) is a buddy for babies! Helps caregivers track sleep, feedings, diaper changes, tummy time and more to learn about and predict baby's needs without (as much) guess work.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "http://127.0.0.1:8000,https://babybuddy.domain.com",
          "description": "Add any address you'd like to access babybuddy at (comma separated, no spaces)",
          "label": "CSRF_TRUSTED_ORIGINS",
          "name": "CSRF_TRUSTED_ORIGINS"
        }
      ],
      "image": "linuxserver/babybuddy:latest",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/babybuddy-logo.png",
      "name": "Babybuddy",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/babybuddy/config</p>",
      "platform": "linux",
      "ports": [
        "8000:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Babybuddy",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/babybuddy/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Bazarr](https://www.bazarr.media/) is a companion application to Sonarr and Radarr. It can manage and download subtitles based on your requirements. You define your preferences by TV show or movie and Bazarr takes care of everything for you.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/bazarr:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/bazarr.png",
      "name": "Bazarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bazarr/config<br>mkdir -p /volume1/docker/bazarr/movies<br>mkdir -p /volume1/docker/bazarr/tv</p>",
      "platform": "linux",
      "ports": [
        "6767:6767/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Bazarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/bazarr/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/bazarr/movies",
          "container": "/movies"
        },
        {
          "bind": "/volume1/docker/bazarr/tv",
          "container": "/tv"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Beets](http://beets.io/) is a music library manager and not, for the most part, a music player. It does include a simple player plugin and an experimental Web-based player, but it generally leaves actual sound-reproduction to specialized tools.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/beets:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/beets-icon.png",
      "name": "Beets",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/beets/config<br>mkdir -p /volume1/docker/beets/music<br>mkdir -p /volume1/docker/beets/downloads</p>",
      "platform": "linux",
      "ports": [
        "8337:8337/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Beets",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/beets/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/beets/music",
          "container": "/music"
        },
        {
          "bind": "/volume1/docker/beets/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Blender](https://www.blender.org/) is a free and open-source 3D computer graphics software toolset used for creating animated films, visual effects, art, 3D printed models, motion graphics, interactive 3D applications, virtual reality, and computer games. **This image does not support GPU rendering out of the box only accelerated workspace experience**",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
          "label": "SUBFOLDER",
          "name": "SUBFOLDER"
        }
      ],
      "image": "linuxserver/blender:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/blender-logo.png",
      "name": "Blender",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/blender/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Blender",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/blender/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Research"
      ],
      "description": "[BOINC](https://boinc.berkeley.edu/) is a platform for high-throughput computing on a large scale (thousands or millions of computers). It can be used for volunteer computing (using consumer devices) or grid computing (using organizational resources). It supports virtualized, parallel, and GPU-based applications.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Optionally set a password for the gui.",
          "label": "PASSWORD",
          "name": "PASSWORD"
        }
      ],
      "image": "linuxserver/boinc:latest",
      "logo": "https://raw.githubusercontent.com/BOINC/boinc/master/doc/logo/boinc_logo_black.jpg",
      "name": "Boinc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/boinc/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "8181:8181/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Boinc",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/boinc/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Audio"
      ],
      "description": "[Booksonic-air](http://booksonic.org) is a platform for accessing the audiobooks you own wherever you are. At the moment the platform consists of: * Booksonic Air - A server for streaming your audiobooks, successor to the original Booksonic server and based on Airsonic. * Booksonic App - An DSub based Android app for connection to Booksonic-Air servers.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "url-base",
          "description": "Base url for use with reverse proxies etc.",
          "label": "CONTEXT_PATH",
          "name": "CONTEXT_PATH"
        }
      ],
      "image": "linuxserver/booksonic-air:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/booksonic-air.png",
      "name": "Booksonic-air",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/booksonic-air/config<br>mkdir -p /volume1/docker/booksonic-air/audiobooks<br>mkdir -p /volume1/docker/booksonic-air/podcasts<br>mkdir -p /volume1/docker/booksonic-air/othermedia</p>",
      "platform": "linux",
      "ports": [
        "4040:4040/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Booksonic-air",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/booksonic-air/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/booksonic-air/audiobooks",
          "container": "/audiobooks"
        },
        {
          "bind": "/volume1/docker/booksonic-air/podcasts",
          "container": "/podcasts"
        },
        {
          "bind": "/volume1/docker/booksonic-air/othermedia",
          "container": "/othermedia"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Bookstack](https://github.com/BookStackApp/BookStack) is a free and open source Wiki designed for creating beautiful documentation. Featuring a simple, but powerful WYSIWYG editor it allows for teams to create detailed and useful documentation with ease. Powered by SQL and including a Markdown editor for those who prefer it, BookStack is geared towards making documentation more of a pleasure than a chore. For more information on BookStack visit their website and check it out: https://www.bookstackapp.com",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "for specifying the IP:port or URL your application will be accessed on (ie. `http://192.168.1.1:6875` or `https://bookstack.mydomain.com`",
          "label": "APP_URL",
          "name": "APP_URL"
        },
        {
          "default": "<yourdbhost>",
          "description": "for specifying the database host",
          "label": "DB_HOST",
          "name": "DB_HOST"
        },
        {
          "default": "<yourdbport>",
          "description": "for specifying the database port if not default 3306",
          "label": "DB_PORT",
          "name": "DB_PORT"
        },
        {
          "default": "<yourdbuser>",
          "description": "for specifying the database user",
          "label": "DB_USER",
          "name": "DB_USER"
        },
        {
          "default": "<yourdbpass>",
          "description": "for specifying the database password (non-alphanumeric passwords must be properly escaped.)",
          "label": "DB_PASS",
          "name": "DB_PASS"
        },
        {
          "default": "bookstackapp",
          "description": "for specifying the database to be used",
          "label": "DB_DATABASE",
          "name": "DB_DATABASE"
        }
      ],
      "image": "linuxserver/bookstack:latest",
      "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/bookstack-logo500x500.png",
      "name": "Bookstack",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/bookstack/config</p>",
      "platform": "linux",
      "ports": [
        "6875:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Bookstack",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/bookstack/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Budge](https://github.com/linuxserver/budge) is an open source 'budgeting with envelopes' personal finance app.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/budge:latest",
      "logo": "",
      "name": "Budge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/budge/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Budge",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/budge/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/build-agent for details.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/build-agent:latest",
      "logo": "",
      "name": "Build-agent",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/build-agent/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Build-agent",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/build-agent/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Calibre](https://calibre-ebook.com/) is a powerful and easy to use e-book manager. Users say it's outstanding and a must-have. It'll allow you to do nearly everything and it takes things a step beyond normal e-book software. It's also completely free and open source and great for both casual users and computer experts.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Optionally set a password for the gui.",
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "default": "",
          "description": "Optionally pass cli start arguments to calibre.",
          "label": "CLI_ARGS",
          "name": "CLI_ARGS"
        }
      ],
      "image": "linuxserver/calibre:latest",
      "logo": "https://github.com/kovidgoyal/calibre/raw/master/resources/images/lt.png",
      "name": "Calibre",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calibre/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "8181:8181/tcp",
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Calibre",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/calibre/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Books"
      ],
      "description": "[Calibre-web](https://github.com/janeczku/calibre-web) is a web app providing a clean interface for browsing, reading and downloading eBooks using an existing Calibre database. It is also possible to integrate google drive and edit metadata and your calibre library through the app itself. This software is a fork of library and licensed under the GPL v3 License.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "linuxserver/mods:universal-calibre",
          "description": "#optional & **x86-64 only** Adds the ability to perform ebook conversion",
          "label": "DOCKER_MODS",
          "name": "DOCKER_MODS"
        },
        {
          "default": "1",
          "description": "Optionally set this to allow Google OAUTH to work",
          "label": "OAUTHLIB_RELAX_TOKEN_SCOPE",
          "name": "OAUTHLIB_RELAX_TOKEN_SCOPE"
        }
      ],
      "image": "linuxserver/calibre-web:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/calibre-web-icon.png",
      "name": "Calibre-web",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/calibre-web/config<br>mkdir -p /volume1/docker/calibre-web/books</p>",
      "platform": "linux",
      "ports": [
        "8083:8083/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Calibre-web",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/calibre-web/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/calibre-web/books",
          "container": "/books"
        }
      ]
    },
    {
      "description": "[Changedetection.io](https://github.com/dgtlmoon/changedetection.io) provides free, open-source web page monitoring, notification and change detection.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Specify the full URL (including protocol) when running behind a reverse proxy",
          "label": "BASE_URL",
          "name": "BASE_URL"
        }
      ],
      "image": "linuxserver/changedetection.io:latest",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/changedetection-icon.png",
      "name": "Changedetection.io",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/changedetection.io/config</p>",
      "platform": "linux",
      "ports": [
        "5000:5000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Changedetection.io",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/changedetection.io/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Chromium](https://www.chromium.org/chromium-projects/) is an open-source browser project that aims to build a safer, faster, and more stable way for all users to experience the web.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full.",
          "label": "CHROME_CLI",
          "name": "CHROME_CLI"
        }
      ],
      "image": "linuxserver/chromium:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/chromium-logo.png",
      "name": "Chromium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/chromium/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Chromium",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/chromium/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ci for details.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/ci:latest",
      "logo": "",
      "name": "Ci",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ci/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ci",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/ci/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Development"
      ],
      "description": "[Code-server](https://coder.com) is VS Code running on a remote server, accessible through the browser. - Code on your Chromebook, tablet, and laptop with a consistent dev environment. - If you have a Windows or Mac workstation, more easily develop for Linux. - Take advantage of large cloud servers to speed up tests, compilations, downloads, and more. - Preserve battery life when you're on the go. - All intensive computation runs on your server. - You're no longer running excess instances of Chrome.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "password",
          "description": "Optional web gui password, if `PASSWORD` or `HASHED_PASSWORD` is not provided, there will be no auth.",
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "default": "",
          "description": "Optional web gui password, overrides `PASSWORD`, instructions on how to create it is below.",
          "label": "HASHED_PASSWORD",
          "name": "HASHED_PASSWORD"
        },
        {
          "default": "password",
          "description": "If this optional variable is set, user will have sudo access in the code-server terminal with the specified password.",
          "label": "SUDO_PASSWORD",
          "name": "SUDO_PASSWORD"
        },
        {
          "default": "",
          "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
          "label": "SUDO_PASSWORD_HASH",
          "name": "SUDO_PASSWORD_HASH"
        },
        {
          "default": "code-server.my.domain",
          "description": "If this optional variable is set, this domain will be proxied for subdomain proxying. See [Documentation](https://github.com/cdr/code-server/blob/master/docs/FAQ.md#sub-domains)",
          "label": "PROXY_DOMAIN",
          "name": "PROXY_DOMAIN"
        },
        {
          "default": "/config/workspace",
          "description": "If this optional variable is set, code-server will open this directory by default",
          "label": "DEFAULT_WORKSPACE",
          "name": "DEFAULT_WORKSPACE"
        }
      ],
      "image": "linuxserver/code-server:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/code-server-banner.png",
      "name": "Code-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/code-server/config</p>",
      "platform": "linux",
      "ports": [
        "8443:8443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Code-server",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/code-server/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Books"
      ],
      "description": "[Cops](http://blog.slucas.fr/en/oss/calibre-opds-php-server) by Sébastien Lucas, stands for Calibre OPDS (and HTML) Php Server. COPS links to your Calibre library database and allows downloading and emailing of books directly from a web browser and provides a OPDS feed to connect to your devices. Changes in your Calibre library are reflected immediately in your COPS pages. See : [COPS's home](http://blog.slucas.fr/en/oss/calibre-opds-php-server) for more details. Don't forget to check the [Wiki](https://github.com/seblucas/cops/wiki). ## Why? (taken from the author's site) In my opinion Calibre is a marvelous tool but is too big and has too much dependencies to be used for its content server. That's the main reason why I coded this OPDS server. I needed a simple tool to be installed on a small server (Seagate Dockstar in my case). I initially thought of Calibre2OPDS but as it generate static file no search was possible. Later I added an simple HTML catalog that should be usable on my Kobo. So COPS's main advantages are : * No need for many dependencies. * No need for a lot of CPU or RAM. * Not much code. * Search is available. * With Dropbox / owncloud it's very easy to have an up to date OPDS server. * It was fun to code. If you want to use the OPDS feed don't forget to specify feed.php at the end of your URL.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/cops:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/cops-icon.png",
      "name": "Cops",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/cops/config<br>mkdir -p /volume1/docker/cops/books</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Cops",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/cops/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/cops/books",
          "container": "/books"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Daapd](https://owntone.github.io/owntone-server/) (iTunes) media server with support for AirPlay devices, Apple Remote (and compatibles), Chromecast, MPD and internet radio.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/daapd:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/daapd-git.png",
      "name": "Daapd",
      "network": "host",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/daapd/config<br>mkdir -p /volume1/docker/daapd/music</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Daapd",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/daapd/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/daapd/music",
          "container": "/music"
        }
      ]
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "[darktable](https://www.darktable.org/) is an open source photography workflow application and raw developer. A virtual lighttable and darkroom for photographers. It manages your digital negatives in a database, lets you view them through a zoomable lighttable and enables you to develop raw images and enhance them.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/darktable:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/darktable-logo.png",
      "name": "Darktable",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/darktable/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Darktable",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/darktable/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "[Davos](https://github.com/linuxserver/davos) is an FTP automation tool that periodically scans given host locations for new files. It can be configured for various purposes, including listening for specific files to appear in the host location, ready for it to download and then move, if required. It also supports completion notifications as well as downstream API calls, to further the workflow.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/davos:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/davos/master/docs/list.PNG",
      "name": "Davos",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/davos/config<br>mkdir -p /volume1/docker/davos/download</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Davos",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/davos/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/davos/download",
          "container": "/download"
        }
      ]
    },
    {
      "categories": [
        "Networking"
      ],
      "description": "[Ddclient](https://github.com/ddclient/ddclient) is a Perl client used to update dynamic DNS entries for accounts on Dynamic DNS Network Service Provider. It was originally written by Paul Burry and is now mostly by wimpunk. It has the capability to update more than just dyndns and it can fetch your WAN-ipaddress in a few different ways.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/ddclient:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ddclient-logo.png",
      "name": "Ddclient",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ddclient/config</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Ddclient",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/ddclient/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "File Management"
      ],
      "description": "[Deluge](http://deluge-torrent.org/) is a lightweight, Free Software, cross-platform BitTorrent client. * Full Encryption * WebUI * Plugin System * Much more...",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "error",
          "description": "set the loglevel output when running Deluge, default is info for deluged and warning for delgued-web",
          "label": "DELUGE_LOGLEVEL",
          "name": "DELUGE_LOGLEVEL"
        }
      ],
      "image": "linuxserver/deluge:latest",
      "logo": "https://avatars2.githubusercontent.com/u/6733935?v=3&s=200",
      "name": "Deluge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/deluge/config<br>mkdir -p /volume1/docker/deluge/downloads</p>",
      "platform": "linux",
      "ports": [
        "8112:8112/tcp",
        "6881:6881/tcp",
        "6881:6881/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Deluge",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/deluge/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/deluge/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "categories": [
        "Photography"
      ],
      "description": "[digiKam](https://www.digikam.org/): Professional Photo Management with the Power of Open Source",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
          "label": "SUBFOLDER",
          "name": "SUBFOLDER"
        }
      ],
      "image": "linuxserver/digikam:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/digikam.png",
      "name": "Digikam",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/digikam/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Digikam",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/digikam/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Development"
      ],
      "description": "[Dillinger](https://github.com/joemccann/dillinger) is a cloud-enabled, mobile-ready, offline-storage, AngularJS powered HTML5 Markdown editor.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/dillinger:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dillinger.png",
      "name": "Dillinger",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dillinger/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Dillinger",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/dillinger/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "[Diskover](https://github.com/diskoverdata/diskover-community) is an open source file system indexer that uses Elasticsearch to index and manage data across heterogeneous storage systems.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "elasticsearch",
          "description": "ElasticSearch host (optional)",
          "label": "ES_HOST",
          "name": "ES_HOST"
        },
        {
          "default": "9200",
          "description": "ElasticSearch port (optional)",
          "label": "ES_PORT",
          "name": "ES_PORT"
        },
        {
          "default": "elastic",
          "description": "ElasticSearch username (optional)",
          "label": "ES_USER",
          "name": "ES_USER"
        },
        {
          "default": "changeme",
          "description": "ElasticSearch password (optional)",
          "label": "ES_PASS",
          "name": "ES_PASS"
        }
      ],
      "image": "linuxserver/diskover:latest",
      "logo": "https://raw.githubusercontent.com/diskoverdata/diskover-community/master/diskover-web/public/images/diskover.png",
      "name": "Diskover",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/diskover/config<br>mkdir -p /volume1/docker/diskover/data</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Diskover",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/diskover/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/diskover/data",
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "[Dokuwiki](https://www.dokuwiki.org/dokuwiki/) is a simple to use and highly versatile Open Source wiki software that doesn't require a database. It is loved by users for its clean and readable syntax. The ease of maintenance, backup and integration makes it an administrator's favorite. Built in access controls and authentication connectors make DokuWiki especially useful in the enterprise context and the large number of plugins contributed by its vibrant community allow for a broad range of use cases beyond a traditional wiki.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/dokuwiki:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/dokuwiki-icon.png",
      "name": "Dokuwiki",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/dokuwiki/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Dokuwiki",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/dokuwiki/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Automation"
      ],
      "description": "[Domoticz](https://www.domoticz.com) is a Home Automation System that lets you monitor and configure various devices like: Lights, Switches, various sensors/meters like Temperature, Rain, Wind, UV, Electra, Gas, Water and much more. Notifications/Alerts can be sent to any mobile device.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "domoticz",
          "description": "Sets webroot to domoticz for usage with subfolder reverse proxy. Not needed unless reverse proxying.",
          "label": "WEBROOT",
          "name": "WEBROOT"
        },
        {
          "default": "<path to database>",
          "description": "Sets path to database. Do not set unless you know what this does.",
          "label": "DBASE",
          "name": "DBASE"
        }
      ],
      "image": "linuxserver/domoticz:latest",
      "logo": "https://github.com/domoticz/domoticz/raw/master/www/images/logo.png",
      "name": "Domoticz",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/domoticz/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "6144:6144/tcp",
        "1443:1443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Domoticz",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/domoticz/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Doplarr](https://github.com/kiranshila/Doplarr) is an *arr request bot for Discord.'",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Specify your discord bot token.",
          "label": "DISCORD__TOKEN",
          "name": "DISCORD__TOKEN"
        },
        {
          "default": "",
          "description": "Specify your Overseerr API key. Leave blank if using Radarr/Sonarr.",
          "label": "OVERSEERR__API",
          "name": "OVERSEERR__API"
        },
        {
          "default": "http://localhost:5055",
          "description": "Specify your Overseerr URL. Leave blank if using Radarr/Sonarr.",
          "label": "OVERSEERR__URL",
          "name": "OVERSEERR__URL"
        },
        {
          "default": "",
          "description": "Specify your Radarr API key. Leave blank if using Overseerr.",
          "label": "RADARR__API",
          "name": "RADARR__API"
        },
        {
          "default": "http://localhost:7878",
          "description": "Specify your Radarr URL. Leave blank if using Overseerr.",
          "label": "RADARR__URL",
          "name": "RADARR__URL"
        },
        {
          "default": "",
          "description": "Specify your Sonarr API key. Leave blank if using Overseerr.",
          "label": "SONARR__API",
          "name": "SONARR__API"
        },
        {
          "default": "http://localhost:8989",
          "description": "Specify your Sonarr URL. Leave blank if using Overseerr.",
          "label": "SONARR__URL",
          "name": "SONARR__URL"
        },
        {
          "default": "25",
          "description": "Sets the maximum size of the search results selection",
          "label": "DISCORD__MAX_RESULTS",
          "name": "DISCORD__MAX_RESULTS"
        },
        {
          "default": ":plain",
          "description": "Sets the style of the request alert message. One of `:plain` `:embed` `:none`",
          "label": "DISCORD__REQUESTED_MSG_STYLE",
          "name": "DISCORD__REQUESTED_MSG_STYLE"
        },
        {
          "default": "",
          "description": "The name of the quality profile to use by default for Sonarr",
          "label": "SONARR__QUALITY_PROFILE",
          "name": "SONARR__QUALITY_PROFILE"
        },
        {
          "default": "",
          "description": "The name of the quality profile to use by default for Radarr",
          "label": "RADARR__QUALITY_PROFILE",
          "name": "RADARR__QUALITY_PROFILE"
        },
        {
          "default": "",
          "description": "The root folder to use by default for Sonarr",
          "label": "SONARR__ROOTFOLDER",
          "name": "SONARR__ROOTFOLDER"
        },
        {
          "default": "",
          "description": "The root folder to use by default for Radarr",
          "label": "RADARR__ROOTFOLDER",
          "name": "RADARR__ROOTFOLDER"
        },
        {
          "default": "",
          "description": "The name of the language profile to use by default for Sonarr",
          "label": "SONARR__LANGUAGE_PROFILE",
          "name": "SONARR__LANGUAGE_PROFILE"
        },
        {
          "default": "",
          "description": "The Overseerr user id to use by default if there is no associated discord account for the requester",
          "label": "OVERSEERR__DEFAULT_ID",
          "name": "OVERSEERR__DEFAULT_ID"
        },
        {
          "default": "true",
          "description": "Sets whether users can request partial seasons.",
          "label": "PARTIAL_SEASONS",
          "name": "PARTIAL_SEASONS"
        },
        {
          "default": ":info",
          "description": "The log level for the logging backend. This can be changed for debugging purposes. One of trace `:debug` `:info` `:warn` `:error` `:fatal` `:report`",
          "label": "LOG_LEVEL",
          "name": "LOG_LEVEL"
        },
        {
          "default": "",
          "description": "For passing additional java options.",
          "label": "JAVA_OPTS",
          "name": "JAVA_OPTS"
        }
      ],
      "image": "linuxserver/doplarr:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doplarr-logo_title.png",
      "name": "Doplarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doplarr/config</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Doplarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/doplarr/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "File Management"
      ],
      "description": "[Double Commander](https://doublecmd.sourceforge.io/) is a free cross platform open source file manager with two panels side by side. It is inspired by Total Commander and features some new ideas.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/doublecommander:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/doublecommander-icon.png",
      "name": "Doublecommander",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/doublecommander/config<br>mkdir -p /volume1/docker/doublecommander/data</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Doublecommander",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/doublecommander/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/doublecommander/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Duckdns](https://duckdns.org/) is a free service which will point a DNS (sub domains of duckdns.org) to an IP of your choice. The service is completely free, and doesn't require reactivation or forum posts to maintain its existence.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "subdomain1,subdomain2",
          "description": "multiple subdomains allowed, comma separated, no spaces",
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS"
        },
        {
          "default": "token",
          "description": "DuckDNS token",
          "label": "TOKEN",
          "name": "TOKEN"
        },
        {
          "default": "false",
          "description": "Set to `true` to log to file (also need to map /config).",
          "label": "LOG_FILE",
          "name": "LOG_FILE"
        }
      ],
      "image": "linuxserver/duckdns:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/duckdns.png",
      "name": "Duckdns",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/duckdns/config</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Duckdns",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/duckdns/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Duplicati](https://www.duplicati.com/) works with standard protocols like FTP, SSH, WebDAV as well as popular services like Microsoft OneDrive, Amazon Cloud Drive & S3, Google Drive, box.com, Mega, hubiC and many others.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Optionally specify any [CLI variables](https://duplicati.readthedocs.io/en/latest/07-other-command-line-utilities/) you want to launch the app with",
          "label": "CLI_ARGS",
          "name": "CLI_ARGS"
        }
      ],
      "image": "linuxserver/duplicati:latest",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/duplicati-icon.png",
      "name": "Duplicati",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/duplicati/config<br>mkdir -p /volume1/docker/duplicati/backups<br>mkdir -p /volume1/docker/duplicati/source</p>",
      "platform": "linux",
      "ports": [
        "8200:8200/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Duplicati",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/duplicati/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/duplicati/backups",
          "container": "/backups"
        },
        {
          "bind": "/volume1/docker/duplicati/source",
          "container": "/source"
        }
      ]
    },
    {
      "categories": [
        "Home Media"
      ],
      "description": "[Emby](https://emby.media/) organizes video, music, live TV, and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone emby Media Server.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/emby:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emby-logo.png",
      "name": "Emby",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emby/config<br>mkdir -p /volume1/docker/emby/data/tvshows<br>mkdir -p /volume1/docker/emby/data/movies<br></p>",
      "platform": "linux",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Emby",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/emby/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/emby/data/tvshows",
          "container": "/data/tvshows"
        },
        {
          "bind": "/volume1/docker/emby/data/movies",
          "container": "/data/movies"
        },
        {
          "bind": "/opt/vc/lib",
          "container": "/opt/vc/lib"
        }
      ]
    },
    {
      "description": "[Embystat](https://github.com/mregni/EmbyStat) is a personal web server that can calculate all kinds of statistics from your (local) Emby server. Just install this on your server and let him calculate all kinds of fun stuff.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/embystat:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/embystat-logo.png",
      "name": "Embystat",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/embystat/config</p>",
      "platform": "linux",
      "ports": [
        "6555:6555/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Embystat",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/embystat/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Emulatorjs](https://github.com/linuxserver/emulatorjs) - In browser web based emulation portable to nearly any device for many retro consoles. A mix of emulators is used between Libretro and EmulatorJS.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/",
          "description": "Specify a subfolder for reverse proxies IE '/FOLDER/'",
          "label": "SUBFOLDER",
          "name": "SUBFOLDER"
        }
      ],
      "image": "linuxserver/emulatorjs:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/emulatorjs-logo.png",
      "name": "Emulatorjs",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/emulatorjs/config<br>mkdir -p /volume1/docker/emulatorjs/data</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "80:80/tcp",
        "4001:4001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Emulatorjs",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/emulatorjs/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/emulatorjs/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Endlessh](https://github.com/skeeto/endlessh) is an SSH tarpit that very slowly sends an endless, random SSH banner. It keeps SSH clients locked up for hours or even days at a time. The purpose is to put your real SSH server on another port and then let the script kiddies get stuck in this tarpit instead of bothering a real server.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "10000",
          "description": "The endless banner is sent one line at a time. This is the delay in milliseconds between individual lines.",
          "label": "MSDELAY",
          "name": "MSDELAY"
        },
        {
          "default": "32",
          "description": "The length of each line is randomized. This controls the maximum length of each line. Shorter lines may keep clients on for longer if they give up after a certain number of bytes.",
          "label": "MAXLINES",
          "name": "MAXLINES"
        },
        {
          "default": "4096",
          "description": "Maximum number of connections to accept at a time. Connections beyond this are not immediately rejected, but will wait in the queue.",
          "label": "MAXCLIENTS",
          "name": "MAXCLIENTS"
        },
        {
          "default": "false",
          "description": "By default, the app logs to container log. If this is set to `true`, the log will be output to file under `/config/logs/endlessh` (`/config` needs to be mapped).",
          "label": "LOGFILE",
          "name": "LOGFILE"
        },
        {
          "default": "",
          "description": "By default, the app binds to IPv4 and IPv6 addresses. Set it to `4` or `6` to bind to IPv4 only or IPv6 only, respectively. Leave blank to bind to both.",
          "label": "BINDFAMILY",
          "name": "BINDFAMILY"
        }
      ],
      "image": "linuxserver/endlessh:latest",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/openssh-server-logo.png",
      "name": "Endlessh",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/endlessh/config</p>",
      "platform": "linux",
      "ports": [
        "22:2222/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Endlessh",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/endlessh/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Fail2ban](http://www.fail2ban.org/) is a daemon to ban hosts that cause multiple authentication errors.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/fail2ban:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/fail2ban-logo.png",
      "name": "Fail2ban",
      "network": "host",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/fail2ban/config<br>mkdir -p /volume1/docker/fail2ban/var/log:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/airsonic:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/apache2:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/authelia:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/emby:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/filebrowser:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/homeassistant:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/lighttpd:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/nextcloud:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/nginx:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/nzbget:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/overseerr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/prowlarr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/radarr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/sabnzbd:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/sonarr:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/unificontroller:ro<br>mkdir -p /volume1/docker/fail2ban/remotelogs/vaultwarden:ro</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Fail2ban",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/fail2ban/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/fail2ban/var/log:ro",
          "container": "/var/log:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/airsonic:ro",
          "container": "/remotelogs/airsonic:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/apache2:ro",
          "container": "/remotelogs/apache2:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/authelia:ro",
          "container": "/remotelogs/authelia:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/emby:ro",
          "container": "/remotelogs/emby:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/filebrowser:ro",
          "container": "/remotelogs/filebrowser:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/homeassistant:ro",
          "container": "/remotelogs/homeassistant:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/lighttpd:ro",
          "container": "/remotelogs/lighttpd:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/nextcloud:ro",
          "container": "/remotelogs/nextcloud:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/nginx:ro",
          "container": "/remotelogs/nginx:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/nzbget:ro",
          "container": "/remotelogs/nzbget:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/overseerr:ro",
          "container": "/remotelogs/overseerr:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/prowlarr:ro",
          "container": "/remotelogs/prowlarr:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/radarr:ro",
          "container": "/remotelogs/radarr:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/sabnzbd:ro",
          "container": "/remotelogs/sabnzbd:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/sonarr:ro",
          "container": "/remotelogs/sonarr:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/unificontroller:ro",
          "container": "/remotelogs/unificontroller:ro"
        },
        {
          "bind": "/volume1/docker/fail2ban/remotelogs/vaultwarden:ro",
          "container": "/remotelogs/vaultwarden:ro"
        }
      ]
    },
    {
      "description": "[Feed2toot](https://gitlab.com/chaica/feed2toot) automatically parses rss feeds, identifies new posts and posts them on the Mastodon social network.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "5",
          "description": "Limit number of RSS entries published at each execution.",
          "label": "FEED_LIMIT",
          "name": "FEED_LIMIT"
        }
      ],
      "image": "linuxserver/feed2toot:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/feed2toot-banner.png",
      "name": "Feed2toot",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/feed2toot/config</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Feed2toot",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/feed2toot/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/ffmpeg for details.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/ffmpeg:latest",
      "logo": "",
      "name": "Ffmpeg",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ffmpeg/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ffmpeg",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/ffmpeg/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[FIleZilla](https://filezilla-project.org/) Client is a fast and reliable cross-platform FTP, FTPS and SFTP client with lots of useful features and an intuitive graphical user interface.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/filezilla:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/filezilla-logo.png",
      "name": "Filezilla",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/filezilla/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Filezilla",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/filezilla/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Firefox](https://www.mozilla.org/en-US/firefox/) Browser, also known as Mozilla Firefox or simply Firefox, is a free and open-source web browser developed by the Mozilla Foundation and its subsidiary, the Mozilla Corporation. Firefox uses the Gecko layout engine to render web pages, which implements current and anticipated web standards.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/firefox:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/firefox-logo.png",
      "name": "Firefox",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/firefox/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Firefox",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/firefox/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Fleet](https://github.com/linuxserver/fleet) provides an online web interface which displays a set of maintained images from one or more owned repositories.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "DATABASE",
          "description": "A switch to define how Fleet manages user logins. If set to DATABASE, see the related optional params. Can be set to either DATABASE or PROPERTIES.",
          "label": "fleet_admin_authentication_type",
          "name": "fleet_admin_authentication_type"
        },
        {
          "default": "jdbc:mariadb://<url>:3306/fleet",
          "description": "The full JDBC connection string to the Fleet database",
          "label": "fleet_database_url",
          "name": "fleet_database_url"
        },
        {
          "default": "fleet_user",
          "description": "The username with the relevant GRANT permissions for the database",
          "label": "fleet_database_username",
          "name": "fleet_database_username"
        },
        {
          "default": "dbuserpassword",
          "description": "The database user's password.",
          "label": "fleet_database_password",
          "name": "fleet_database_password"
        },
        {
          "default": "randomstring",
          "description": "A string used as part of the password key derivation process.",
          "label": "fleet_admin_secret",
          "name": "fleet_admin_secret"
        }
      ],
      "image": "linuxserver/fleet:latest",
      "logo": "",
      "name": "Fleet",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/fleet/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Fleet",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/fleet/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Folding@home](https://foldingathome.org/) is a distributed computing project for simulating protein dynamics, including the process of protein folding and the movements of proteins implicated in a variety of diseases. It brings together citizen scientists who volunteer to run simulations of protein dynamics on their personal computers. Insights from this data are helping scientists to better understand biology, and providing new opportunities for developing therapeutics.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/foldingathome:latest",
      "logo": "https://foldingathome.org/wp-content/uploads/2016/09/folding-at-home-logo.png",
      "name": "Foldingathome",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/foldingathome/config</p>",
      "platform": "linux",
      "ports": [
        "7396:7396/tcp",
        "36330:36330/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Foldingathome",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/foldingathome/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Freshrss](https://freshrss.org/) is a free, self-hostable aggregator for rss feeds.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/freshrss:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/freshrss-banner.png",
      "name": "Freshrss",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/freshrss/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Freshrss",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/freshrss/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Github Desktop](https://desktop.github.com/) is an open source Electron-based GitHub app. It is written in TypeScript and uses React.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/github-desktop:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/github-desktop-icon.png",
      "name": "Github-desktop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/github-desktop/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Github-desktop",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/github-desktop/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[GitQlient](https://github.com/francescmm/GitQlient) is a multi-platform Git client originally forked from QGit. Nowadays it goes beyond of just a fork and adds a lot of new functionality.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/gitqlient:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/gitqlient-icon.png",
      "name": "Gitqlient",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/gitqlient/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Gitqlient",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/gitqlient/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Web Platform"
      ],
      "description": "[Grav](https://github.com/getgrav/grav/) is a Fast, Simple, and Flexible, file-based Web-platform.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/grav:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/grav-logo.png",
      "name": "Grav",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/grav/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Grav",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/grav/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Grocy](https://github.com/grocy/grocy) is an ERP system for your kitchen! Cut down on food waste, and manage your chores with this brilliant utility. Keep track of your purchases, how much food you are wasting, what chores need doing and what batteries need charging with this proudly Open Source tool For more information on grocy visit their website and check it out: https://grocy.info",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/grocy:latest",
      "logo": "https://grocy.info/img/grocy_logo.svg",
      "name": "Grocy",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/grocy/config</p>",
      "platform": "linux",
      "ports": [
        "9283:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Grocy",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/grocy/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Habridge](http://bwssystems.com/#/habridge) emulates Philips Hue API to other home automation gateways such as an Amazon Echo/Dot Gen 1 (gen 2 has issues discovering ha-bridge) or other systems that support Philips Hue. The Bridge handles basic commands such as 'On', 'Off' and 'brightness' commands of the hue protocol. This bridge can control most devices that have a distinct API. In the cases of systems that require authorization and/or have APIs that cannot be handled in the current method, a module may need to be built. The Harmony Hub is such a module and so is the Nest module. The Bridge has helpers to build devices for the gateway for the Logitech Harmony Hub, Vera, Vera Lite or Vera Edge, Nest, Somfy Tahoma, Home Assistant, Domoticz, MQTT, HAL, Fibaro, HomeWizard, LIFX, OpenHAB, FHEM, Broadlink and the ability to proxy all of your real Hue bridges behind this bridge. This bridge was built to help put the Internet of Things together. For more information about how to use this software have a look at their Wiki [https://github.com/bwssytems/ha-bridge/wiki](https://github.com/bwssytems/ha-bridge/wiki)",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "<Your Key To Encrypt Security Data>",
          "description": "Key used to secure communication.",
          "label": "SEC_KEY",
          "name": "SEC_KEY"
        }
      ],
      "image": "linuxserver/habridge:latest",
      "logo": "https://raw.githubusercontent.com/bwssytems/ha-bridge/master/src/main/resources/public/img/favicon.ico",
      "name": "Habridge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/habridge/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "50000:50000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Habridge",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/habridge/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Headphones](https://github.com/rembo10/headphones) is an automated music downloader for NZB and Torrent, written in Python. It supports SABnzbd, NZBget, Transmission, µTorrent and Blackhole.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/headphones:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/headphones-banner.png",
      "name": "Headphones",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/headphones/config<br>mkdir -p /volume1/docker/headphones/downloads<br>mkdir -p /volume1/docker/headphones/music</p>",
      "platform": "linux",
      "ports": [
        "8181:8181/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Headphones",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/headphones/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/headphones/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/headphones/music",
          "container": "/music"
        }
      ]
    },
    {
      "description": "[Healthchecks](https://github.com/healthchecks/healthchecks) is a watchdog for your cron jobs. It's a web server that listens for pings from your cron jobs, plus a web interface.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "The site's top-level URL and the port it listens to if differrent than 80 or 443 (e.g., https://healthchecks.example.com:8000)",
          "label": "SITE_ROOT",
          "name": "SITE_ROOT"
        },
        {
          "default": "",
          "description": "The site's name (e.g., 'Example Corp HealthChecks')",
          "label": "SITE_NAME",
          "name": "SITE_NAME"
        },
        {
          "default": "",
          "description": "From email for alerts",
          "label": "DEFAULT_FROM_EMAIL",
          "name": "DEFAULT_FROM_EMAIL"
        },
        {
          "default": "",
          "description": "SMTP host",
          "label": "EMAIL_HOST",
          "name": "EMAIL_HOST"
        },
        {
          "default": "",
          "description": "SMTP port",
          "label": "EMAIL_PORT",
          "name": "EMAIL_PORT"
        },
        {
          "default": "",
          "description": "SMTP user",
          "label": "EMAIL_HOST_USER",
          "name": "EMAIL_HOST_USER"
        },
        {
          "default": "",
          "description": "SMTP password",
          "label": "EMAIL_HOST_PASSWORD",
          "name": "EMAIL_HOST_PASSWORD"
        },
        {
          "default": "",
          "description": "Use TLS for SMTP (`True` or `False`)",
          "label": "EMAIL_USE_TLS",
          "name": "EMAIL_USE_TLS"
        },
        {
          "default": "",
          "description": "Superuser email",
          "label": "SUPERUSER_EMAIL",
          "name": "SUPERUSER_EMAIL"
        },
        {
          "default": "",
          "description": "Superuser password",
          "label": "SUPERUSER_PASSWORD",
          "name": "SUPERUSER_PASSWORD"
        },
        {
          "default": "",
          "description": "Defaults to False. Set to True to always override the `local_settings.py` file with values from environment variables. Do not set to True if you have made manual modifications to this file.",
          "label": "REGENERATE_SETTINGS",
          "name": "REGENERATE_SETTINGS"
        },
        {
          "default": "",
          "description": "Array of valid hostnames for the server `['test.com','test2.com']` (default: `['*']`)",
          "label": "ALLOWED_HOSTS",
          "name": "ALLOWED_HOSTS"
        },
        {
          "default": "",
          "description": "Defaults to False. A boolean that turns on/off the Apprise integration (https://github.com/caronc/apprise)",
          "label": "APPRISE_ENABLED",
          "name": "APPRISE_ENABLED"
        },
        {
          "default": "",
          "description": "Defaults to True. Debug mode relaxes CSRF protections and increases logging verbosity but should be disabled for production instances as it will impact performance and security.",
          "label": "DEBUG",
          "name": "DEBUG"
        },
        {
          "default": "",
          "description": "Defaults to False. Set to True to allow integrations to connect to private IP addresses.",
          "label": "INTEGRATIONS_ALLOW_PRIVATE_IPS",
          "name": "INTEGRATIONS_ALLOW_PRIVATE_IPS"
        },
        {
          "default": "",
          "description": "The domain to use for generating ping email addresses.",
          "label": "PING_EMAIL_DOMAIN",
          "name": "PING_EMAIL_DOMAIN"
        },
        {
          "default": "",
          "description": "A secret key used for cryptographic signing. Will generate a secure value if one is not supplied",
          "label": "SECRET_KEY",
          "name": "SECRET_KEY"
        },
        {
          "default": "",
          "description": "Full URL to custom site logo",
          "label": "SITE_LOGO_URL",
          "name": "SITE_LOGO_URL"
        }
      ],
      "image": "linuxserver/healthchecks:latest",
      "logo": "https://raw.githubusercontent.com/healthchecks/healthchecks/master/static/img/welcome.png",
      "name": "Healthchecks",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/healthchecks/config</p>",
      "platform": "linux",
      "ports": [
        "8000:8000/tcp",
        "2525:2525/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Healthchecks",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/healthchecks/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Documentation"
      ],
      "description": "[HedgeDoc](https://hedgedoc.org/) gives you access to all your files wherever you are. HedgeDoc is a real-time, multi-platform collaborative markdown note editor. This means that you can write notes with other people on your desktop, tablet or even on the phone. You can sign-in via multiple auth providers like Facebook, Twitter, GitHub and many more on the homepage.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "<hostname or ip>",
          "description": "Host address of mysql database",
          "label": "DB_HOST",
          "name": "DB_HOST"
        },
        {
          "default": "3306",
          "description": "Port to access mysql database default is 3306",
          "label": "DB_PORT",
          "name": "DB_PORT"
        },
        {
          "default": "hedgedoc",
          "description": "Database user",
          "label": "DB_USER",
          "name": "DB_USER"
        },
        {
          "default": "<secret password>",
          "description": "Database password",
          "label": "DB_PASS",
          "name": "DB_PASS"
        },
        {
          "default": "hedgedoc",
          "description": "Database name",
          "label": "DB_NAME",
          "name": "DB_NAME"
        },
        {
          "default": "localhost",
          "description": "The address the gui will be accessed at (ie. `192.168.1.1` or `hedgedoc.domain.com`).",
          "label": "CMD_DOMAIN",
          "name": "CMD_DOMAIN"
        },
        {
          "default": "false",
          "description": "Set to `true` if using a port other than `80` or `443`.",
          "label": "CMD_URL_ADDPORT",
          "name": "CMD_URL_ADDPORT"
        },
        {
          "default": "false",
          "description": "Set to `true` if accessing over https via reverse proxy.",
          "label": "CMD_PROTOCOL_USESSL",
          "name": "CMD_PROTOCOL_USESSL"
        },
        {
          "default": "3000",
          "description": "If you wish to access hedgedoc at a port different than 80, 443 or 3000, you need to set this to that port (ie. `CMD_PORT=5000`) and change the port mapping accordingly (5000:5000).",
          "label": "CMD_PORT",
          "name": "CMD_PORT"
        },
        {
          "default": "['localhost']",
          "description": "Comma-separated list of allowed hostnames",
          "label": "CMD_ALLOW_ORIGIN",
          "name": "CMD_ALLOW_ORIGIN"
        }
      ],
      "image": "linuxserver/hedgedoc:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hedgedoc-banner.png",
      "name": "Hedgedoc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/hedgedoc/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Hedgedoc",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/hedgedoc/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Heimdall](https://heimdall.site) is a way to organise all those links to your most used web sites and web applications in a simple way. Simplicity is the key to Heimdall. Why not use it as your browser start page? It even has the ability to include a search bar using either Google, Bing or DuckDuckGo.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/heimdall:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/heimdall-banner.png",
      "name": "Heimdall",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/heimdall/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Heimdall",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/heimdall/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Home Automation"
      ],
      "description": "[Home Assistant Core](https://www.home-assistant.io/) - Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/homeassistant:latest",
      "logo": "https://github.com/home-assistant/home-assistant.io/raw/next/source/images/favicon-192x192-full.png",
      "name": "Homeassistant",
      "network": "host",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/homeassistant/config</p>",
      "platform": "linux",
      "ports": [
        "8123:8123/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Homeassistant",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/homeassistant/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Htpcmanager](https://github.com/HTPC-Manager/HTPC-Manager) is a front end for many htpc related applications.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/htpcmanager:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/htpcmanager-icon.png",
      "name": "Htpcmanager",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/htpcmanager/config</p>",
      "platform": "linux",
      "ports": [
        "8085:8085/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Htpcmanager",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/htpcmanager/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Jackett](https://github.com/Jackett/Jackett) works as a proxy server: it translates queries from apps (Sonarr, SickRage, CouchPotato, Mylar, etc) into tracker-site-specific http queries, parses the html response, then sends results back to the requesting software. This allows for getting recent uploads (like RSS) and performing searches. Jackett is a single repository of maintained indexer scraping & translation logic - removing the burden from other apps.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "true",
          "description": "Allow Jackett to update inside of the container (currently recommended by Jackett and enabled by default)",
          "label": "AUTO_UPDATE",
          "name": "AUTO_UPDATE"
        },
        {
          "default": "",
          "description": "Optionally specify additional arguments to be passed.",
          "label": "RUN_OPTS",
          "name": "RUN_OPTS"
        }
      ],
      "image": "linuxserver/jackett:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/jackett-banner.png",
      "name": "Jackett",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jackett/config<br>mkdir -p /volume1/docker/jackett/downloads</p>",
      "platform": "linux",
      "ports": [
        "9117:9117/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jackett",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/jackett/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/jackett/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Jellyfin](https://jellyfin.github.io/) is a Free Software Media System that puts you in control of managing and streaming your media. It is an alternative to the proprietary Emby and Plex, to provide media from a dedicated server to end-user devices via multiple apps. Jellyfin is descended from Emby's 3.5.2 release and ported to the .NET Core framework to enable full cross-platform support. There are no strings attached, no premium licenses or features, and no hidden agendas: just a team who want to build something better and work together to achieve it.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "192.168.0.5",
          "description": "Set the autodiscovery response domain or IP address.",
          "label": "JELLYFIN_PublishedServerUrl",
          "name": "JELLYFIN_PublishedServerUrl"
        }
      ],
      "image": "linuxserver/jellyfin:latest",
      "logo": "https://raw.githubusercontent.com/jellyfin/jellyfin-ux/master/branding/SVG/banner-logo-solid.svg?sanitize=true",
      "name": "Jellyfin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jellyfin/config<br>mkdir -p /volume1/docker/jellyfin/data/tvshows<br>mkdir -p /volume1/docker/jellyfin/data/movies</p>",
      "platform": "linux",
      "ports": [
        "8096:8096/tcp",
        "8920:8920/tcp",
        "7359:7359/udp",
        "1900:1900/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jellyfin",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/jellyfin/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/jellyfin/data/tvshows",
          "container": "/data/tvshows"
        },
        {
          "bind": "/volume1/docker/jellyfin/data/movies",
          "container": "/data/movies"
        }
      ]
    },
    {
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/jenkins-builder for details.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/jenkins-builder:latest",
      "logo": "",
      "name": "Jenkins-builder",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/jenkins-builder/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Jenkins-builder",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/jenkins-builder/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Kasm](https://www.kasmweb.com/?utm_campaign=LinuxServer&utm_source=listing) Workspaces is a docker container streaming platform for delivering browser-based access to desktops, applications, and web services. Kasm uses devops-enabled Containerized Desktop Infrastructure (CDI) to create on-demand, disposable, docker containers that are accessible via web browser. Example use-cases include Remote Browser Isolation (RBI), Data Loss Prevention (DLP), Desktop as a Service (DaaS), Secure Remote Access Services (RAS), and Open Source Intelligence (OSINT) collections. The rendering of the graphical-based containers is powered by the open-source project [KasmVNC](https://www.kasmweb.com/kasmvnc.html?utm_campaign=LinuxServer&utm_source=kasmvnc).",
      "env": [
        {
          "default": "443",
          "description": "Specify the port you bind to the outside for Kasm Workspaces.",
          "label": "KASM_PORT",
          "name": "KASM_PORT"
        },
        {
          "default": "USER",
          "description": "Optionally specify a DockerHub Username to pull private images.",
          "label": "DOCKER_HUB_USERNAME",
          "name": "DOCKER_HUB_USERNAME"
        },
        {
          "default": "PASS",
          "description": "Optionally specify a DockerHub password to pull private images.",
          "label": "DOCKER_HUB_PASSWORD",
          "name": "DOCKER_HUB_PASSWORD"
        }
      ],
      "image": "linuxserver/kasm:latest",
      "logo": "https://kasm-ci.s3.amazonaws.com/kasm_wide.png",
      "name": "Kasm",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kasm/opt<br>mkdir -p /volume1/docker/kasm/profiles<br><br></p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "443:443/tcp"
      ],
      "privileged": true,
      "restart_policy": "unless-stopped",
      "title": "Kasm",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/kasm/opt",
          "container": "/opt"
        },
        {
          "bind": "/volume1/docker/kasm/profiles",
          "container": "/profiles"
        },
        {
          "bind": "/dev/input",
          "container": "/dev/input"
        },
        {
          "bind": "/run/udev/data",
          "container": "/run/udev/data"
        }
      ]
    },
    {
      "description": "[Kdenlive](https://kdenlive.org/) is a powerful free and open source cross-platform video editing program made by the KDE community. Feature rich and production ready.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
          "label": "SUBFOLDER",
          "name": "SUBFOLDER"
        }
      ],
      "image": "linuxserver/kdenlive:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/kdenlive-logo.png",
      "name": "Kdenlive",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/kdenlive/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Kdenlive",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/kdenlive/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Lazylibrarian](https://lazylibrarian.gitlab.io/) is a program to follow authors and grab metadata for all your digital reading needs. It uses a combination of Goodreads Librarything and optionally GoogleBooks as sources for author info and book info. This container is based on the DobyTang fork.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "linuxserver/calibre-web:calibre|linuxserver/mods:lazylibrarian-ffmpeg",
          "description": "Allows additional functionality to be added, e.g. the Calibredb import program (optional, more info below)",
          "label": "DOCKER_MODS",
          "name": "DOCKER_MODS"
        }
      ],
      "image": "linuxserver/lazylibrarian:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lazylibrarian-icon.png",
      "name": "Lazylibrarian",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lazylibrarian/config<br>mkdir -p /volume1/docker/lazylibrarian/downloads<br>mkdir -p /volume1/docker/lazylibrarian/books</p>",
      "platform": "linux",
      "ports": [
        "5299:5299/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Lazylibrarian",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/lazylibrarian/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/lazylibrarian/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/lazylibrarian/books",
          "container": "/books"
        }
      ]
    },
    {
      "description": "[Ldap-auth](https://github.com/nginxinc/nginx-ldap-auth) software is for authenticating users who request protected resources from servers proxied by nginx. It includes a daemon (ldap-auth) that communicates with an authentication server, and a webserver daemon that generates an authentication cookie based on the user’s credentials. The daemons are written in Python for use with a Lightweight Directory Access Protocol (LDAP) authentication server (OpenLDAP or Microsoft Windows Active Directory 2003 and 2012).",
      "env": [
        {
          "default": "",
          "description": "Optionally define a custom valid fernet key (only needed if container is frequently recreated, or if using multi-node setups, invalidating previous authentications)",
          "label": "FERNETKEY",
          "name": "FERNETKEY"
        },
        {
          "default": "",
          "description": "Optionally point this to a certificate file to enable HTTP over SSL (HTTPS) for the ldap auth daemon",
          "label": "CERTFILE",
          "name": "CERTFILE"
        },
        {
          "default": "",
          "description": "Optionally point this to the private key file, matching the certificate file referred to in CERTFILE",
          "label": "KEYFILE",
          "name": "KEYFILE"
        }
      ],
      "image": "linuxserver/ldap-auth:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ldap-auth-logo.png",
      "name": "Ldap-auth",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "platform": "linux",
      "ports": [
        "8888:8888/tcp",
        "9000:9000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ldap-auth",
      "type": 1
    },
    {
      "categories": [
        "Productivity"
      ],
      "description": "[LibreOffice](https://www.libreoffice.org/) is a free and powerful office suite, and a successor to OpenOffice.org (commonly known as OpenOffice). Its clean interface and feature-rich tools help you unleash your creativity and enhance your productivity.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/libreoffice:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/libreoffice-logo.png",
      "name": "Libreoffice",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/libreoffice/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Libreoffice",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/libreoffice/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Librespeed](https://github.com/librespeed/speedtest) is a very lightweight Speedtest implemented in Javascript, using XMLHttpRequest and Web Workers. No Flash, No Java, No Websocket, No Bullshit.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "PASSWORD",
          "description": "Set the password for the results database.",
          "label": "PASSWORD",
          "name": "PASSWORD"
        },
        {
          "default": "false",
          "description": "(optional) set to `true` to enable custom results page in `/config/www/results/index.php`.",
          "label": "CUSTOM_RESULTS",
          "name": "CUSTOM_RESULTS"
        },
        {
          "default": "sqlite",
          "description": "Defaults to `sqlite`, can also be set to `mysql` or `postgresql`.",
          "label": "DB_TYPE",
          "name": "DB_TYPE"
        },
        {
          "default": "DB_NAME",
          "description": "Database name. Required for mysql and pgsql.",
          "label": "DB_NAME",
          "name": "DB_NAME"
        },
        {
          "default": "DB_HOSTNAME",
          "description": "Database address. Required for mysql and pgsql.",
          "label": "DB_HOSTNAME",
          "name": "DB_HOSTNAME"
        },
        {
          "default": "DB_USERNAME",
          "description": "Database username. Required for mysql and pgsql.",
          "label": "DB_USERNAME",
          "name": "DB_USERNAME"
        },
        {
          "default": "DB_PASSWORD",
          "description": "Database password. Required for mysql and pgsql.",
          "label": "DB_PASSWORD",
          "name": "DB_PASSWORD"
        },
        {
          "default": "DB_PORT",
          "description": "Database port. Required for mysql.",
          "label": "DB_PORT",
          "name": "DB_PORT"
        }
      ],
      "image": "linuxserver/librespeed:latest",
      "logo": "https://raw.githubusercontent.com/librespeed/speedtest/master/.logo/logo3.png",
      "name": "Librespeed",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/librespeed/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Librespeed",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/librespeed/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Lidarr](https://github.com/lidarr/Lidarr) is a music collection manager for Usenet and BitTorrent users. It can monitor multiple RSS feeds for new tracks from your favorite artists and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/lidarr:latest",
      "logo": "https://github.com/lidarr/Lidarr/raw/develop/Logo/400.png",
      "name": "Lidarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lidarr/config<br>mkdir -p /volume1/docker/lidarr/music<br>mkdir -p /volume1/docker/lidarr/downloads</p>",
      "platform": "linux",
      "ports": [
        "8686:8686/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Lidarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/lidarr/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/lidarr/music",
          "container": "/music"
        },
        {
          "bind": "/volume1/docker/lidarr/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Limnoria](https://github.com/ProgVal/limnoria) A robust, full-featured, and user/programmer-friendly Python IRC bot, with many existing plugins. Successor of the well-known Supybot.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/limnoria:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-limnoria/master/logo.png",
      "name": "Limnoria",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/limnoria/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Limnoria",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/limnoria/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Lollypop](https://wiki.gnome.org/Apps/Lollypop) is a lightweight modern music player designed to work excellently on the GNOME desktop environment.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/lollypop:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lollypop-icon.png",
      "name": "Lollypop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lollypop/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Lollypop",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/lollypop/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Lychee](https://lycheeorg.github.io/) is a free photo-management tool, which runs on your server or web-space. Installing is a matter of seconds. Upload, manage and share photos like from a native application. Lychee comes with everything you need and all your photos are stored securely.' ### UPGRADE WARNING Please note that the v4 upgrade process resets ALL password-protected albums. Any albums that were made public with a password will need to be re-secured.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "mariadb",
          "description": "for specifying the database host",
          "label": "DB_HOST",
          "name": "DB_HOST"
        },
        {
          "default": "3306",
          "description": "for specifying the database port",
          "label": "DB_PORT",
          "name": "DB_PORT"
        },
        {
          "default": "lychee",
          "description": "for specifying the database user",
          "label": "DB_USERNAME",
          "name": "DB_USERNAME"
        },
        {
          "default": "dbpassword",
          "description": "for specifying the database password",
          "label": "DB_PASSWORD",
          "name": "DB_PASSWORD"
        },
        {
          "default": "lychee",
          "description": "for specifying the database to be used",
          "label": "DB_DATABASE",
          "name": "DB_DATABASE"
        }
      ],
      "image": "linuxserver/lychee:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/lychee-icon.png",
      "name": "Lychee",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/lychee/config<br>mkdir -p /volume1/docker/lychee/pictures</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Lychee",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/lychee/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/lychee/pictures",
          "container": "/pictures"
        }
      ]
    },
    {
      "description": "[Mariadb](https://mariadb.org/) is one of the most popular database servers. Made by the original developers of MySQL.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "ROOT_ACCESS_PASSWORD",
          "description": "Set this to root password for installation (minimum 4 characters & non-alphanumeric passwords must be properly escaped).",
          "label": "MYSQL_ROOT_PASSWORD",
          "name": "MYSQL_ROOT_PASSWORD"
        },
        {
          "default": "USER_DB_NAME",
          "description": "Specify the name of a database to be created on image startup.",
          "label": "MYSQL_DATABASE",
          "name": "MYSQL_DATABASE"
        },
        {
          "default": "MYSQL_USER",
          "description": "This user will have superuser access to the database specified by MYSQL_DATABASE (do not use root here).",
          "label": "MYSQL_USER",
          "name": "MYSQL_USER"
        },
        {
          "default": "DATABASE_PASSWORD",
          "description": "Set this to the password you want to use for you MYSQL_USER (minimum 4 characters & non-alphanumeric passwords must be properly escaped).",
          "label": "MYSQL_PASSWORD",
          "name": "MYSQL_PASSWORD"
        },
        {
          "default": "http://URL1/your.sql,https://URL2/your.sql",
          "description": "Set this to ingest sql files from an http/https endpoint (comma seperated array).",
          "label": "REMOTE_SQL",
          "name": "REMOTE_SQL"
        }
      ],
      "image": "linuxserver/mariadb:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mariadb-git.png",
      "name": "Mariadb",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mariadb/config</p>",
      "platform": "linux",
      "ports": [
        "3306:3306/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mariadb",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/mariadb/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Social"
      ],
      "description": "[Mastodon](https://github.com/mastodon/mastodon/) is a free, open-source social network server based on ActivityPub where users can follow friends and discover new ones..",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "example.com",
          "description": "This is the unique identifier of your server in the network. It cannot be safely changed later.",
          "label": "LOCAL_DOMAIN",
          "name": "LOCAL_DOMAIN"
        },
        {
          "default": "redis",
          "description": "Redis server hostname",
          "label": "REDIS_HOST",
          "name": "REDIS_HOST"
        },
        {
          "default": "6379",
          "description": "Redis port",
          "label": "REDIS_PORT",
          "name": "REDIS_PORT"
        },
        {
          "default": "db",
          "description": "Postgres database hostname",
          "label": "DB_HOST",
          "name": "DB_HOST"
        },
        {
          "default": "mastodon",
          "description": "Postgres username",
          "label": "DB_USER",
          "name": "DB_USER"
        },
        {
          "default": "mastodon",
          "description": "Postgres db name",
          "label": "DB_NAME",
          "name": "DB_NAME"
        },
        {
          "default": "mastodon",
          "description": "Postgres password",
          "label": "DB_PASS",
          "name": "DB_PASS"
        },
        {
          "default": "5432",
          "description": "Portgres port",
          "label": "DB_PORT",
          "name": "DB_PORT"
        },
        {
          "default": "false",
          "description": "Enable or disable Elasticsearch (requires a separate ES instance)",
          "label": "ES_ENABLED",
          "name": "ES_ENABLED"
        },
        {
          "default": "",
          "description": "Browser session secret. Changing it will break all active browser sessions.",
          "label": "SECRET_KEY_BASE",
          "name": "SECRET_KEY_BASE"
        },
        {
          "default": "",
          "description": "MFA secret. Changing it will break two-factor authentication.",
          "label": "OTP_SECRET",
          "name": "OTP_SECRET"
        },
        {
          "default": "",
          "description": "Push notification private key. Changing it will break push notifications.",
          "label": "VAPID_PRIVATE_KEY",
          "name": "VAPID_PRIVATE_KEY"
        },
        {
          "default": "",
          "description": "Push notification public key. Changing it will break push notifications.",
          "label": "VAPID_PUBLIC_KEY",
          "name": "VAPID_PUBLIC_KEY"
        },
        {
          "default": "mail.example.com",
          "description": "SMTP server for email notifications",
          "label": "SMTP_SERVER",
          "name": "SMTP_SERVER"
        },
        {
          "default": "25",
          "description": "SMTP server port",
          "label": "SMTP_PORT",
          "name": "SMTP_PORT"
        },
        {
          "default": "",
          "description": "SMTP username",
          "label": "SMTP_LOGIN",
          "name": "SMTP_LOGIN"
        },
        {
          "default": "",
          "description": "SMTP password",
          "label": "SMTP_PASSWORD",
          "name": "SMTP_PASSWORD"
        },
        {
          "default": "notifications@example.com",
          "description": "From address for emails send from Mastodon",
          "label": "SMTP_FROM_ADDRESS",
          "name": "SMTP_FROM_ADDRESS"
        },
        {
          "default": "false",
          "description": "Enable or disable S3 storage of uploaded files",
          "label": "S3_ENABLED",
          "name": "S3_ENABLED"
        },
        {
          "default": "mastodon.example.com",
          "description": "This can be set if you want your server identifier to be different to the subdomain hosting Mastodon. See [https://docs.joinmastodon.org/admin/config/#basic](https://docs.joinmastodon.org/admin/config/#basic)",
          "label": "WEB_DOMAIN",
          "name": "WEB_DOMAIN"
        },
        {
          "default": "es",
          "description": "Elasticsearch server hostname",
          "label": "ES_HOST",
          "name": "ES_HOST"
        },
        {
          "default": "9200",
          "description": "Elasticsearch port",
          "label": "ES_PORT",
          "name": "ES_PORT"
        },
        {
          "default": "elastic",
          "description": "Elasticsearch username",
          "label": "ES_USER",
          "name": "ES_USER"
        },
        {
          "default": "elastic",
          "description": "Elasticsearch password",
          "label": "ES_PASS",
          "name": "ES_PASS"
        },
        {
          "default": "",
          "description": "S3 bucket hostname",
          "label": "S3_BUCKET",
          "name": "S3_BUCKET"
        },
        {
          "default": "",
          "description": "S3 bucket access key ID",
          "label": "AWS_ACCESS_KEY_ID",
          "name": "AWS_ACCESS_KEY_ID"
        },
        {
          "default": "",
          "description": "S3 bucket secret access key",
          "label": "AWS_SECRET_ACCESS_KEY",
          "name": "AWS_SECRET_ACCESS_KEY"
        },
        {
          "default": "",
          "description": "Alternate hostname for object fetching if you are front the S3 connections.",
          "label": "S3_ALIAS_HOST",
          "name": "S3_ALIAS_HOST"
        },
        {
          "default": "false",
          "description": "Only run the sidekiq service in this container instance. For large scale instances that need better queue handling.",
          "label": "SIDEKIQ_ONLY",
          "name": "SIDEKIQ_ONLY"
        },
        {
          "default": "",
          "description": "The name of the sidekiq queue to run in this container. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-queues).",
          "label": "SIDEKIQ_QUEUE",
          "name": "SIDEKIQ_QUEUE"
        },
        {
          "default": "false",
          "description": "Set to `true` on the main container if you're running additional sidekiq instances. It will run the `default` queue.",
          "label": "SIDEKIQ_DEFAULT",
          "name": "SIDEKIQ_DEFAULT"
        },
        {
          "default": "5",
          "description": "The number of threads for sidekiq to use. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads).",
          "label": "SIDEKIQ_THREADS",
          "name": "SIDEKIQ_THREADS"
        },
        {
          "default": "5",
          "description": "The size of the DB connection pool, must be *at least* the same as `SIDEKIQ_THREADS`. See [notes](https://docs.joinmastodon.org/admin/scaling/#sidekiq-threads).",
          "label": "DB_POOL",
          "name": "DB_POOL"
        }
      ],
      "image": "linuxserver/mastodon:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mastodon-banner.png",
      "name": "Mastodon",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mastodon/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mastodon",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/mastodon/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Medusa](https://pymedusa.com/) is an automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/medusa:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/medusa-icon.png",
      "name": "Medusa",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/medusa/config<br>mkdir -p /volume1/docker/medusa/downloads<br>mkdir -p /volume1/docker/medusa/tv</p>",
      "platform": "linux",
      "ports": [
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Medusa",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/medusa/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/medusa/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/medusa/tv",
          "container": "/tv"
        }
      ]
    },
    {
      "description": "[Minetest](http://www.minetest.net/) (server) is a near-infinite-world block sandbox game and a game engine, inspired by InfiniMiner, Minecraft, and the like.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "--gameid minetest --port 30000",
          "description": "Optionally specify any [CLI variables](https://wiki.minetest.net/Command_line) you want to launch the app with",
          "label": "CLI_ARGS",
          "name": "CLI_ARGS"
        }
      ],
      "image": "linuxserver/minetest:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/beta-templates/master/lsiodev/img/minetest-icon.png",
      "name": "Minetest",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/minetest/config/.minetest</p>",
      "platform": "linux",
      "ports": [
        "30000:30000/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Minetest",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/minetest/config/.minetest",
          "container": "/config/.minetest"
        }
      ]
    },
    {
      "description": "[Minisatip](https://github.com/catalinii/minisatip) is a multi-threaded satip server version 1.2 that runs under Linux and it was tested with DVB-S, DVB-S2, DVB-T, DVB-T2, DVB-C, DVB-C2, ATSC and ISDB-T cards.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Specify specific run params for minisatip",
          "label": "RUN_OPTS",
          "name": "RUN_OPTS"
        }
      ],
      "image": "linuxserver/minisatip:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/minisatip-icon.png",
      "name": "Minisatip",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/minisatip/config</p>",
      "platform": "linux",
      "ports": [
        "8875:8875/tcp",
        "554:554/tcp",
        "1900:1900/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Minisatip",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/minisatip/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Mstream](https://mstream.io/) is a personal music streaming server. You can use mStream to stream your music from your home computer to any device, anywhere. There are mobile apps available for both Android and iPhone.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/mstream:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mstream-icon.png",
      "name": "Mstream",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mstream/config<br>mkdir -p /volume1/docker/mstream/music</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mstream",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/mstream/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/mstream/music",
          "container": "/music"
        }
      ]
    },
    {
      "description": "The [Mullvad Browser](https://mullvad.net/en/browser) is a privacy-focused web browser developed in a collaboration between Mullvad VPN and the Tor Project. It’s designed to minimize tracking and fingerprinting. You could say it’s a Tor Browser to use without the Tor Network. Instead, you can use it with a trustworthy VPN.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "192.168.0.0/16",
          "description": "If using a VPN, set this to your local LAN IP range using CIDR notation. Without it you will be unable to access the web interface. If you have multiple ranges or a complex LAN setup you will need to manage this yourself in the wg0.conf, see the App Setup section for details.",
          "label": "LOCAL_NET",
          "name": "LOCAL_NET"
        }
      ],
      "image": "linuxserver/mullvad-browser:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mullvad-browser-logo.png",
      "name": "Mullvad-browser",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mullvad-browser/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mullvad-browser",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/mullvad-browser/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Mylar3](https://github.com/mylar3/mylar3) is an automated Comic Book downloader (cbr/cbz) for use with NZB and torrents written in python. It supports SABnzbd, NZBGET, and many torrent clients in addition to DDL.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/mylar3:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mylar-icon.png",
      "name": "Mylar3",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mylar3/config<br>mkdir -p /volume1/docker/mylar3/comics<br>mkdir -p /volume1/docker/mylar3/downloads</p>",
      "platform": "linux",
      "ports": [
        "8090:8090/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mylar3",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/mylar3/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/mylar3/comics",
          "container": "/comics"
        },
        {
          "bind": "/volume1/docker/mylar3/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[MySQL Workbench](https://www.mysql.com/products/workbench/) is a unified visual tool for database architects, developers, and DBAs. MySQL Workbench provides data modeling, SQL development, and comprehensive administration tools for server configuration, user administration, backup, and much more.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/mysql-workbench:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/mysql-workbench-icon.png",
      "name": "Mysql-workbench",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/mysql-workbench/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Mysql-workbench",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/mysql-workbench/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Nano](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "localhost",
          "description": "Default peer host (can be overidden with an array by command line options)",
          "label": "PEER_HOST",
          "name": "PEER_HOST"
        },
        {
          "default": "GENESIS_PUBLIC",
          "description": "Genesis block public key",
          "label": "LIVE_GENESIS_PUB",
          "name": "LIVE_GENESIS_PUB"
        },
        {
          "default": "nano_xxxxxx",
          "description": "Genesis block account",
          "label": "LIVE_GENESIS_ACCOUNT",
          "name": "LIVE_GENESIS_ACCOUNT"
        },
        {
          "default": "WORK_FOR_BLOCK",
          "description": "Genesis block proof of work",
          "label": "LIVE_GENESIS_WORK",
          "name": "LIVE_GENESIS_WORK"
        },
        {
          "default": "BLOCK_SIGNATURE",
          "description": "Genesis block signature",
          "label": "LIVE_GENESIS_SIG",
          "name": "LIVE_GENESIS_SIG"
        },
        {
          "default": "--config node.enable_voting=true",
          "description": "Node run command cli args",
          "label": "CLI_OPTIONS",
          "name": "CLI_OPTIONS"
        },
        {
          "default": "http://example.com/Nano_64_version_20.7z",
          "description": "HTTP/HTTPS endpoint to download a 7z file with the data.ldb to bootstrap to this node",
          "label": "LMDB_BOOTSTRAP_URL",
          "name": "LMDB_BOOTSTRAP_URL"
        }
      ],
      "image": "linuxserver/nano:latest",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
      "name": "Nano",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nano/config</p>",
      "platform": "linux",
      "ports": [
        "8075:8075/tcp",
        "7076:3000/tcp",
        "7077:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nano",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/nano/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Nano-wallet](https://nano.org/) is a digital payment protocol designed to be accessible and lightweight, with a focus on removing inefficiencies present in other cryptocurrencies. With ultrafast transactions and zero fees on a secure, green and decentralized network, this makes Nano ideal for everyday transactions. This container is a simple nginx wrapper for the light wallet located [here](https://github.com/linuxserver/nano-wallet). You will need to pass a valid RPC host when accessing this container.",
      "image": "linuxserver/nano-wallet:latest",
      "logo": "https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/Nano_logo.png/640px-Nano_logo.png",
      "name": "Nano-wallet",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nano-wallet",
      "type": 1
    },
    {
      "description": "[Netbootxyz](https://netboot.xyz) is a way to PXE boot various operating system installers or utilities from one place within the BIOS without the need of having to go retrieve the media to run the tool. iPXE is used to provide a user friendly menu from within the BIOS that lets you easily choose the operating system you want along with any specific types of versions or bootable flags.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "1.9.9",
          "description": "Specify a specific version of boot files you want to use from NETBOOT.XYZ (unset pulls latest)",
          "label": "MENU_VERSION",
          "name": "MENU_VERSION"
        },
        {
          "default": "30000:30010",
          "description": "Specify the port range tftp will use for data transfers [(see Wikipedia)](https://en.wikipedia.org/wiki/Trivial_File_Transfer_Protocol#Details)",
          "label": "PORT_RANGE",
          "name": "PORT_RANGE"
        },
        {
          "default": "/",
          "description": "Specify a sobfolder if running this behind a reverse proxy (IE /proxy/)",
          "label": "SUBFOLDER",
          "name": "SUBFOLDER"
        }
      ],
      "image": "linuxserver/netbootxyz:latest",
      "logo": "https://netboot.xyz/images/netboot.xyz.gif",
      "name": "Netbootxyz",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbootxyz/config<br>mkdir -p /volume1/docker/netbootxyz/assets</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "69:69/udp",
        "8080:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Netbootxyz",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/netbootxyz/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/netbootxyz/assets",
          "container": "/assets"
        }
      ]
    },
    {
      "description": "[Netbox](https://github.com/netbox-community/netbox) is an IP address management (IPAM) and data center infrastructure management (DCIM) tool. Initially conceived by the network engineering team at DigitalOcean, NetBox was developed specifically to address the needs of network and infrastructure engineers. It is intended to function as a domain-specific source of truth for network operations.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Email address for `admin` account",
          "label": "SUPERUSER_EMAIL",
          "name": "SUPERUSER_EMAIL"
        },
        {
          "default": "",
          "description": "Password for `admin` account",
          "label": "SUPERUSER_PASSWORD",
          "name": "SUPERUSER_PASSWORD"
        },
        {
          "default": "",
          "description": "The hostname you will use to access the app (i.e., netbox.example.com)",
          "label": "ALLOWED_HOST",
          "name": "ALLOWED_HOST"
        },
        {
          "default": "",
          "description": "Database name (default: netbox)",
          "label": "DB_NAME",
          "name": "DB_NAME"
        },
        {
          "default": "",
          "description": "Database user",
          "label": "DB_USER",
          "name": "DB_USER"
        },
        {
          "default": "",
          "description": "Database password",
          "label": "DB_PASSWORD",
          "name": "DB_PASSWORD"
        },
        {
          "default": "",
          "description": "Database host (default: postgres)",
          "label": "DB_HOST",
          "name": "DB_HOST"
        },
        {
          "default": "",
          "description": "Database port (defaul: 5432)",
          "label": "DB_PORT",
          "name": "DB_PORT"
        },
        {
          "default": "",
          "description": "Redis host (default: redis)",
          "label": "REDIS_HOST",
          "name": "REDIS_HOST"
        },
        {
          "default": "",
          "description": "Redis port number (default: 6379)",
          "label": "REDIS_PORT",
          "name": "REDIS_PORT"
        },
        {
          "default": "",
          "description": "Redis password (default: none)",
          "label": "REDIS_PASSWORD",
          "name": "REDIS_PASSWORD"
        },
        {
          "default": "",
          "description": "Redis database ID for tasks (default: 0)",
          "label": "REDIS_DB_TASK",
          "name": "REDIS_DB_TASK"
        },
        {
          "default": "",
          "description": "Redis database ID for caching (default: 1)",
          "label": "REDIS_DB_CACHE",
          "name": "REDIS_DB_CACHE"
        },
        {
          "default": "",
          "description": "The path you will use to access the app (i.e., /netbox, optional, default: none)",
          "label": "BASE_PATH",
          "name": "BASE_PATH"
        },
        {
          "default": "",
          "description": "Enable remote authentication (optional, default: False)",
          "label": "REMOTE_AUTH_ENABLED",
          "name": "REMOTE_AUTH_ENABLED"
        },
        {
          "default": "",
          "description": "Python path to the custom Django authentication backend to use for external user authentication (optional, default: netbox.authentication.RemoteUserBackend)",
          "label": "REMOTE_AUTH_BACKEND",
          "name": "REMOTE_AUTH_BACKEND"
        },
        {
          "default": "",
          "description": "Name of the HTTP header which informs NetBox of the currently authenticated user. (optional, default: HTTP_REMOTE_USER)",
          "label": "REMOTE_AUTH_HEADER",
          "name": "REMOTE_AUTH_HEADER"
        },
        {
          "default": "",
          "description": "If true, NetBox will automatically create local accounts for users authenticated via a remote service (optional, default: False)",
          "label": "REMOTE_AUTH_AUTO_CREATE_USER",
          "name": "REMOTE_AUTH_AUTO_CREATE_USER"
        },
        {
          "default": "",
          "description": "The list of groups to assign a new user account when created using remote authentication (optional, default: [])",
          "label": "REMOTE_AUTH_DEFAULT_GROUPS",
          "name": "REMOTE_AUTH_DEFAULT_GROUPS"
        },
        {
          "default": "",
          "description": "A mapping of permissions to assign a new user account when created using remote authentication (optional, default: {})",
          "label": "REMOTE_AUTH_DEFAULT_PERMISSIONS",
          "name": "REMOTE_AUTH_DEFAULT_PERMISSIONS"
        }
      ],
      "image": "linuxserver/netbox:latest",
      "logo": "https://raw.githubusercontent.com/netbox-community/netbox/develop/docs/netbox_logo.svg",
      "name": "Netbox",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/netbox/config</p>",
      "platform": "linux",
      "ports": [
        "8000:8000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Netbox",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/netbox/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Nextcloud](https://nextcloud.com/) gives you access to all your files wherever you are. Where are your photos and documents? With Nextcloud you pick a server of your choice, at home, in a data center or at a provider. And that is where your files will be. Nextcloud runs on that server, protecting your data and giving you access from your desktop or mobile devices. Through Nextcloud you also access, sync and share your existing data on that FTP drive at the office, a Dropbox or a NAS you have at home.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/nextcloud:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nextcloud-icon.png",
      "name": "Nextcloud",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nextcloud/config<br>mkdir -p /volume1/docker/nextcloud/data</p>",
      "platform": "linux",
      "ports": [
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nextcloud",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/nextcloud/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/nextcloud/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Nginx](https://nginx.org/) is a simple webserver with php support. The config files reside in `/config` for easy user customization.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/nginx:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nginx-banner.png",
      "name": "Nginx",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nginx/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nginx",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/nginx/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Ngircd](https://ngircd.barton.de/) is a free, portable and lightweight Internet Relay Chat server for small or private networks, developed under the GNU General Public License (GPL). It is easy to configure, can cope with dynamic IP addresses, and supports IPv6, SSL-protected connections as well as PAM for authentication. It is written from scratch and not based on the original IRCd.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/ngircd:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ngircd-logo.png",
      "name": "Ngircd",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ngircd/config</p>",
      "platform": "linux",
      "ports": [
        "6667:6667/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ngircd",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/ngircd/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Nntp2nntp](https://github.com/linuxserver/nntp2nntp) proxy allow you to use your NNTP Account from multiple systems, each with own user name and password. It fully supports SSL and you can also limit the access to proxy with SSL certificates. nntp2nntp proxy is very simple and pretty fast. ## Warning Whilst we know of no nntp2nntp security issues the [upstream code](https://github.com/linuxserver/nntp2nntp) for this project has received no changes since 06.08.15 and is likely abandoned permanently. For this reason we strongly recommend you do not make this application public facing and if you must do so other layers of security and SSL should be considered an absolute bare minimum requirement. We see this proxy being used primarily on a LAN so that all the users NNTP applications can share a common set of internal credentials allowing for central managment of the upstream account e.g change provider, server, thread limits for all applications with one global config change.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "<yourUID>",
          "description": "specify your UID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "<yourGID>",
          "description": "specify your GID",
          "label": "PGID",
          "name": "PGID"
        }
      ],
      "image": "linuxserver/nntp2nntp:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/nntp2nntp.png",
      "name": "Nntp2nntp",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nntp2nntp/config</p>",
      "platform": "linux",
      "ports": [
        "1563:1563/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nntp2nntp",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/nntp2nntp/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Nzbhydra2](https://github.com/theotherp/nzbhydra2) is a meta search application for NZB indexers, the 'spiritual successor' to NZBmegasearcH, and an evolution of the original application [NZBHydra](https://github.com/theotherp/nzbhydra). It provides easy access to a number of raw and newznab based indexers. The application NZBHydra 2 is replacing NZBHydra 1 and supports migrating from V1. Be wary that there may be some compatibility issues for those migrating from V1 to V2, so ensure you back up your old configuration before moving over to the new version. **NOTE:** The last version that supports migration is `linuxserver/nzbhydra2:v2.10.2-ls49`",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/nzbhydra2:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/hydra-icon.png",
      "name": "Nzbhydra2",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/nzbhydra2/config<br>mkdir -p /volume1/docker/nzbhydra2/downloads</p>",
      "platform": "linux",
      "ports": [
        "5076:5076/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Nzbhydra2",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/nzbhydra2/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/nzbhydra2/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Ombi](https://ombi.io) allows you to host your own Plex Request and user management system. If you are sharing your Plex server with other users, allow them to request new content using an easy to manage interface! Manage all your requests for Movies and TV with ease, leave notes for the user and get notification when a user requests something. Allow your users to post issues against their requests so you know there is a problem with the audio etc. Even automatically send them weekly newsletters of new content that has been added to your Plex server!",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/ombi",
          "description": "Subfolder can optionally be defined as an env variable for reverse proxies. Keep in mind that once this value is defined, the gui setting for base url no longer works. To use the gui setting, remove this env variable.",
          "label": "BASE_URL",
          "name": "BASE_URL"
        }
      ],
      "image": "linuxserver/ombi:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ombi.png",
      "name": "Ombi",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ombi/config</p>",
      "platform": "linux",
      "ports": [
        "3579:3579/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ombi",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/ombi/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Openssh-server](https://www.openssh.com/) is a sandboxed environment that allows ssh access without giving keys to the entire server. Giving ssh access via private key often means giving full access to the server. This container creates a limited and sandboxed environment that others can ssh into. The users only have access to the folders mapped and the processes running inside this container.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "yourpublickey",
          "description": "Optional ssh public key, which will automatically be added to authorized_keys.",
          "label": "PUBLIC_KEY",
          "name": "PUBLIC_KEY"
        },
        {
          "default": "/path/to/file",
          "description": "Optionally specify a file containing the public key (works with docker secrets).",
          "label": "PUBLIC_KEY_FILE",
          "name": "PUBLIC_KEY_FILE"
        },
        {
          "default": "/path/to/directory/containing/_only_/pubkeys",
          "description": "Optionally specify a directory containing the public keys (works with docker secrets).",
          "label": "PUBLIC_KEY_DIR",
          "name": "PUBLIC_KEY_DIR"
        },
        {
          "default": "https://github.com/username.keys",
          "description": "Optionally specify a URL containing the public key.",
          "label": "PUBLIC_KEY_URL",
          "name": "PUBLIC_KEY_URL"
        },
        {
          "default": "false",
          "description": "Set to `true` to allow `linuxserver.io`, the ssh user, sudo access. Without `USER_PASSWORD` set, this will allow passwordless sudo access.",
          "label": "SUDO_ACCESS",
          "name": "SUDO_ACCESS"
        },
        {
          "default": "false",
          "description": "Set to `true` to allow user/password ssh access. You will want to set `USER_PASSWORD` or `USER_PASSWORD_FILE` as well.",
          "label": "PASSWORD_ACCESS",
          "name": "PASSWORD_ACCESS"
        },
        {
          "default": "password",
          "description": "Optionally set a sudo password for `linuxserver.io`, the ssh user. If this or `USER_PASSWORD_FILE` are not set but `SUDO_ACCESS` is set to true, the user will have passwordless sudo access.",
          "label": "USER_PASSWORD",
          "name": "USER_PASSWORD"
        },
        {
          "default": "/path/to/file",
          "description": "Optionally specify a file that contains the password. This setting supersedes the `USER_PASSWORD` option (works with docker secrets).",
          "label": "USER_PASSWORD_FILE",
          "name": "USER_PASSWORD_FILE"
        },
        {
          "default": "linuxserver.io",
          "description": "Optionally specify a user name (Default:`linuxserver.io`)",
          "label": "USER_NAME",
          "name": "USER_NAME"
        }
      ],
      "image": "linuxserver/openssh-server:latest",
      "logo": "https://upload.wikimedia.org/wikipedia/en/6/65/OpenSSH_logo.png",
      "name": "Openssh-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openssh-server/config</p>",
      "platform": "linux",
      "ports": [
        "2222:2222/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Openssh-server",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/openssh-server/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Openvscode-server](https://github.com/gitpod-io/openvscode-server) provides a version of VS Code that runs a server on a remote machine and allows access through a modern web browser.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Optional security token for accessing the Web UI (ie. `supersecrettoken`).",
          "label": "CONNECTION_TOKEN",
          "name": "CONNECTION_TOKEN"
        },
        {
          "default": "",
          "description": "Optional path to a file inside the container that contains the security token for accessing the Web UI (ie. `/path/to/file`). Overrides `CONNECTION_TOKEN`.",
          "label": "CONNECTION_SECRET",
          "name": "CONNECTION_SECRET"
        },
        {
          "default": "password",
          "description": "If this optional variable is set, user will have sudo access in the openvscode-server terminal with the specified password.",
          "label": "SUDO_PASSWORD",
          "name": "SUDO_PASSWORD"
        },
        {
          "default": "",
          "description": "Optionally set sudo password via hash (takes priority over `SUDO_PASSWORD` var). Format is `$type$salt$hashed`.",
          "label": "SUDO_PASSWORD_HASH",
          "name": "SUDO_PASSWORD_HASH"
        }
      ],
      "image": "linuxserver/openvscode-server:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/openvscode-server-logo.png",
      "name": "Openvscode-server",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/openvscode-server/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Openvscode-server",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/openvscode-server/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Opera](https://www.opera.com/) is a multi-platform web browser developed by its namesake company Opera. The browser is based on Chromium, but distinguishes itself from other Chromium-based browsers (Chrome, Edge, etc.) through its user interface and other features.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "https://www.linuxserver.io/",
          "description": "Specify one or multiple Chromium CLI flags, this string will be passed to the application in full.",
          "label": "OPERA_CLI",
          "name": "OPERA_CLI"
        }
      ],
      "image": "linuxserver/opera:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/opera-icon.png",
      "name": "Opera",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/opera/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Opera",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/opera/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Oscam](http://www.streamboard.tv/oscam/) is an Open Source Conditional Access Module software used for descrambling DVB transmissions using smart cards. It's both a server and a client.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/oscam:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/oscam-logo.png",
      "name": "Oscam",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/oscam/config</p>",
      "platform": "linux",
      "ports": [
        "8888:8888/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Oscam",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/oscam/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Overseerr](https://overseerr.dev/) is a request management and media discovery tool built to work with your existing Plex ecosystem.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/overseerr:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/overseerr.png",
      "name": "Overseerr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/overseerr/config</p>",
      "platform": "linux",
      "ports": [
        "5055:5055/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Overseerr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/overseerr/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[PairDrop](https://github.com/schlagmichdoch/PairDrop) is a sublime alternative to AirDrop that works on all platforms. Send images, documents or text via peer to peer connection to devices in the same local network/Wi-Fi or to paired devices.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "false",
          "description": "Set to `true` to limit clients to 100 requests per 5 min",
          "label": "RATE_LIMIT",
          "name": "RATE_LIMIT"
        },
        {
          "default": "false",
          "description": "Set to `true` to enable websocket fallback if the peer to peer WebRTC connection is not available to the client (see App Setup notes).",
          "label": "WS_FALLBACK",
          "name": "WS_FALLBACK"
        },
        {
          "default": "",
          "description": "Path to a json file containing custom STUN/TURN config (see App Setup notes)",
          "label": "RTC_CONFIG",
          "name": "RTC_CONFIG"
        },
        {
          "default": "false",
          "description": "Set to `true` to debug the http server configuration by logging clients IP addresses used by PairDrop to STDOUT. [See here for more info](https://github.com/schlagmichdoch/PairDrop/blob/master/docs/host-your-own.md#debug-mode). Do not use in production!",
          "label": "DEBUG_MODE",
          "name": "DEBUG_MODE"
        }
      ],
      "image": "linuxserver/pairdrop:latest",
      "logo": "https://raw.githubusercontent.com/schlagmichdoch/PairDrop/master/public/images/android-chrome-512x512.png",
      "name": "Pairdrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pairdrop",
      "type": 1
    },
    {
      "categories": [
        "System Tools"
      ],
      "description": "[Phpmyadmin](https://github.com/phpmyadmin/phpmyadmin/) is a free software tool written in PHP, intended to handle the administration of MySQL over the Web. phpMyAdmin supports a wide range of operations on MySQL and MariaDB.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "1",
          "description": "Set to `1` to allow you to connect to any server. Setting to `0` will only allow you to connect to specified hosts (See Application Setup)",
          "label": "PMA_ARBITRARY",
          "name": "PMA_ARBITRARY"
        },
        {
          "default": "https://phpmyadmin.example.com",
          "description": "Set the URL you will use to access the web frontend",
          "label": "PMA_ABSOLUTE_URI",
          "name": "PMA_ABSOLUTE_URI"
        }
      ],
      "image": "linuxserver/phpmyadmin:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/phpmyadmin-logo.png",
      "name": "Phpmyadmin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/phpmyadmin/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Phpmyadmin",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/phpmyadmin/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Pidgin](https://pidgin.im/) is a chat program which lets you log into accounts on multiple chat networks simultaneously. This means that you can be chatting with friends on XMPP and sitting in an IRC channel at the same time.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/pidgin:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/pidgin-logo.png",
      "name": "Pidgin",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pidgin/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pidgin",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/pidgin/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Piwigo](http://piwigo.org/) is a photo gallery software for the web that comes with powerful features to publish and manage your collection of pictures.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/piwigo:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/piwigo-banner.png",
      "name": "Piwigo",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/piwigo/config<br>mkdir -p /volume1/docker/piwigo/gallery</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Piwigo",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/piwigo/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/piwigo/gallery",
          "container": "/gallery"
        }
      ]
    },
    {
      "description": "[Plex](https://plex.tv) organizes video, music and photos from personal media libraries and streams them to smart TVs, streaming boxes and mobile devices. This container is packaged as a standalone Plex Media Server. has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "docker",
          "description": "Set whether to update plex or not - see Application Setup section.",
          "label": "VERSION",
          "name": "VERSION"
        },
        {
          "default": "",
          "description": "Optionally you can obtain a claim token from https://plex.tv/claim and input here. Keep in mind that the claim tokens expire within 4 minutes.",
          "label": "PLEX_CLAIM",
          "name": "PLEX_CLAIM"
        }
      ],
      "image": "linuxserver/plex:latest",
      "logo": "http://the-gadgeteer.com/wp-content/uploads/2015/10/plex-logo-e1446990678679.png",
      "name": "Plex",
      "network": "host",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/plex/config<br>mkdir -p /volume1/docker/plex/tv<br>mkdir -p /volume1/docker/plex/movies</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Plex",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/plex/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/plex/tv",
          "container": "/tv"
        },
        {
          "bind": "/volume1/docker/plex/movies",
          "container": "/movies"
        }
      ]
    },
    {
      "categories": [
        "Media Management"
      ],
      "description": "[Plex-meta-manager](https://github.com/meisnate12/Plex-Meta-Manager) is a Python 3 script that can be continuously run using YAML configuration files to update on a schedule the metadata of the movies, shows, and collections in your libraries as well as automatically build collections based on various methods all detailed in the wiki.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/config/config.yml",
          "description": "Specify a custom config file to use.",
          "label": "PMM_CONFIG",
          "name": "PMM_CONFIG"
        },
        {
          "default": "03:00",
          "description": "Comma-separated list of times to update each day. Format: `HH:MM`.",
          "label": "PMM_TIME",
          "name": "PMM_TIME"
        },
        {
          "default": "False",
          "description": "Set to `True` to run without the scheduler.",
          "label": "PMM_RUN",
          "name": "PMM_RUN"
        },
        {
          "default": "False",
          "description": "Set to `True` to run in debug mode with only collections that have `test: true`.",
          "label": "PMM_TEST",
          "name": "PMM_TEST"
        },
        {
          "default": "False",
          "description": "Set to `True` to run without any of the missing movie/show functions.",
          "label": "PMM_NO_MISSING",
          "name": "PMM_NO_MISSING"
        }
      ],
      "image": "linuxserver/plex-meta-manager:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/plex-meta-manager-banner.png",
      "name": "Plex-meta-manager",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/plex-meta-manager/config</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Plex-meta-manager",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/plex-meta-manager/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Projectsend](http://www.projectsend.org) is a self-hosted application that lets you upload files and assign them to specific clients that you create yourself. Secure, private and easy. No more depending on external services or e-mail to send those files.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "5000",
          "description": "To set maximum upload size (in MB), default if unset is 5000.",
          "label": "MAX_UPLOAD",
          "name": "MAX_UPLOAD"
        }
      ],
      "image": "linuxserver/projectsend:latest",
      "logo": "http://www.projectsend.org/wp-content/themes/projectsend/img/screenshots.png",
      "name": "Projectsend",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/projectsend/config<br>mkdir -p /volume1/docker/projectsend/data</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Projectsend",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/projectsend/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/projectsend/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Prowlarr](https://github.com/Prowlarr/Prowlarr) is a indexer manager/proxy built on the popular arr .net/reactjs base stack to integrate with your various PVR apps. Prowlarr supports both Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr, Radarr, Lidarr, and Readarr offering complete management of your indexers with no per app Indexer setup required (we do it all).",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/prowlarr:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/prowlarr-banner.png",
      "name": "Prowlarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/prowlarr/config</p>",
      "platform": "linux",
      "ports": [
        "9696:9696/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Prowlarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/prowlarr/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Pwndrop](https://github.com/kgretzky/pwndrop) is a self-deployable file hosting service for sending out red teaming payloads or securely sharing your private files over HTTP and WebDAV.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/pwndrop",
          "description": "Secret path for admin access. Defaults to `/pwndrop`. This parameter only takes effect during initial install; it can later be changed in the web gui.",
          "label": "SECRET_PATH",
          "name": "SECRET_PATH"
        }
      ],
      "image": "linuxserver/pwndrop:latest",
      "logo": "https://raw.githubusercontent.com/kgretzky/pwndrop/master/media/pwndrop-logo-512.png",
      "name": "Pwndrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pwndrop/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pwndrop",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/pwndrop/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Pydio-cells](https://pydio.com/) is the nextgen file sharing platform for organizations. It is a full rewrite of the Pydio project using the Go language following a micro-service architecture.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "yourdomain.url",
          "description": "The external url you would like to use to access Pydio Cells (Can be https://domain.url or https://IP:PORT).",
          "label": "EXTERNALURL",
          "name": "EXTERNALURL"
        },
        {
          "default": "0.0.0.0",
          "description": "Enter the LAN IP of the docker server. Required for local access by IP, added to self signed cert as SAN (not required if accessing only through reverse proxy).",
          "label": "SERVER_IP",
          "name": "SERVER_IP"
        }
      ],
      "image": "linuxserver/pydio-cells:latest",
      "logo": "https://raw.githubusercontent.com/wiki/pydio/cells/images/PydioCellsColor.png",
      "name": "Pydio-cells",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pydio-cells/config</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "33060:33060/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pydio-cells",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/pydio-cells/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[pyLoad](https://pyload.net/) is a Free and Open Source download manager written in Python and designed to be extremely lightweight, easily extensible and fully manageable via web.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/pyload-ng:latest",
      "logo": "https://pyload.net/img/banner.png",
      "name": "Pyload-ng",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pyload-ng/config<br>mkdir -p /volume1/docker/pyload-ng/downloads</p>",
      "platform": "linux",
      "ports": [
        "8000:8000/tcp",
        "9666:9666/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pyload-ng",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/pyload-ng/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/pyload-ng/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Pylon](https://github.com/pylonide/pylon) is a web based integrated development environment built with Node.js as a backend and with a supercharged JavaScript/HTML5 frontend, licensed under GPL version 3. This project originates from Cloud9 v2 project.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "https://github.com/linuxserver/docker-pylon.git",
          "description": "Specify a git repo to checkout on first startup",
          "label": "GITURL",
          "name": "GITURL"
        },
        {
          "default": "myuser",
          "description": "Specify a basic auth user.",
          "label": "PYUSER",
          "name": "PYUSER"
        },
        {
          "default": "mypass",
          "description": "Specify a basic auth password.",
          "label": "PYPASS",
          "name": "PYPASS"
        }
      ],
      "image": "linuxserver/pylon:latest",
      "logo": "https://raw.githubusercontent.com/pylonide/pylon/master/doc/screenshot02.png",
      "name": "Pylon",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/pylon/config<br>mkdir -p /volume1/docker/pylon/code</p>",
      "platform": "linux",
      "ports": [
        "3131:3131/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Pylon",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/pylon/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/pylon/code",
          "container": "/code"
        }
      ]
    },
    {
      "description": "The [Qbittorrent](https://www.qbittorrent.org/) project aims to provide an open-source software alternative to µTorrent. qBittorrent is based on the Qt toolkit and libtorrent-rasterbar library.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "8080",
          "description": "for changing the port of the webui, see below for explanation",
          "label": "WEBUI_PORT",
          "name": "WEBUI_PORT"
        }
      ],
      "image": "linuxserver/qbittorrent:latest",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/qbittorrent-icon.png",
      "name": "Qbittorrent",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/qbittorrent/config<br>mkdir -p /volume1/docker/qbittorrent/downloads</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp",
        "6881:6881/tcp",
        "6881:6881/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Qbittorrent",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/qbittorrent/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/qbittorrent/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[QDirStat](https://github.com/shundhammer/qdirstat) Qt-based directory statistics: KDirStat without any KDE -- from the author of the original KDirStat.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/qdirstat:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/qdirstat-logo.png",
      "name": "Qdirstat",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/qdirstat/config<br>mkdir -p /volume1/docker/qdirstat/data</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Qdirstat",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/qdirstat/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/qdirstat/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Quassel-core](http://quassel-irc.org/) is a modern, cross-platform, distributed IRC client, meaning that one (or multiple) client(s) can attach to and detach from a central core. This container handles the IRC connection (quasselcore) and requires a desktop client (quasselclient) to be used and configured. It is designed to be always on and will keep your identity present in IRC even when your clients cannot be online. Backlog (history) is downloaded by your client upon reconnection allowing infinite scrollback through time.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "--config-from-environment",
          "description": "Custom CLI options for Quassel",
          "label": "RUN_OPTS",
          "name": "RUN_OPTS"
        }
      ],
      "image": "linuxserver/quassel-core:latest",
      "logo": "http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/256/Apps-quassel-icon.png",
      "name": "Quassel-core",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-core/config</p>",
      "platform": "linux",
      "ports": [
        "4242:4242/tcp",
        "113:10113/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Quassel-core",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/quassel-core/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Quassel-web](https://github.com/magne4000/quassel-webserver) is a web client for Quassel. Note that a Quassel-Core instance is required, we have a container available [here.](https://hub.docker.com/r/linuxserver/quassel-core/)",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "192.168.1.10",
          "description": "specify the URL or IP address of your Quassel Core instance",
          "label": "QUASSEL_CORE",
          "name": "QUASSEL_CORE"
        },
        {
          "default": "4242",
          "description": "specify the port of your Quassel Core instance",
          "label": "QUASSEL_PORT",
          "name": "QUASSEL_PORT"
        },
        {
          "default": "/quassel",
          "description": "Specify a url-base in reverse proxy setups ie. `/quassel`",
          "label": "URL_BASE",
          "name": "URL_BASE"
        }
      ],
      "image": "linuxserver/quassel-web:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/quassel-web-banner.png",
      "name": "Quassel-web",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/quassel-web/config</p>",
      "platform": "linux",
      "ports": [
        "64443:64443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Quassel-web",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/quassel-web/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Radarr](https://github.com/Radarr/Radarr) - A fork of Sonarr to work with movies à la Couchpotato.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/radarr:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/radarr.png",
      "name": "Radarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/radarr/config<br>mkdir -p /volume1/docker/radarr/movies<br>mkdir -p /volume1/docker/radarr/downloads</p>",
      "platform": "linux",
      "ports": [
        "7878:7878/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Radarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/radarr/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/radarr/movies",
          "container": "/movies"
        },
        {
          "bind": "/volume1/docker/radarr/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Raneto](http://raneto.com/) - is an open source Knowledgebase platform that uses static Markdown files to power your Knowledgebase.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/raneto:latest",
      "logo": "https://raw.githubusercontent.com/gilbitron/Raneto/master/logo/logo_readme.png",
      "name": "Raneto",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/raneto/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Raneto",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/raneto/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Rdesktop](http://xrdp.org/) - Containers containing full desktop environments in many popular flavors for Alpine, Ubuntu, Arch, and Fedora accessible via RDP.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/rdesktop:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rdesktop.png",
      "name": "Rdesktop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p><br>mkdir -p /volume1/docker/rdesktop/config</p>",
      "platform": "linux",
      "ports": [
        "3389:3389/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Rdesktop",
      "type": 1,
      "volumes": [
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        },
        {
          "bind": "/volume1/docker/rdesktop/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/readme-sync for details.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/readme-sync:latest",
      "logo": "",
      "name": "Readme-sync",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/readme-sync/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Readme-sync",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/readme-sync/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Remmina](https://remmina.org/) is a remote desktop client written in GTK, aiming to be useful for system administrators and travellers, who need to work with lots of remote computers in front of either large or tiny screens. Remmina supports multiple network protocols, in an integrated and consistent user interface. Currently RDP, VNC, SPICE, NX, XDMCP, SSH and EXEC are supported.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/remmina:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/remmina-icon.png",
      "name": "Remmina",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/remmina/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Remmina",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/remmina/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Requestrr](https://github.com/darkalfx/requestrr) is a chatbot used to simplify using services like Sonarr/Radarr/Ombi via the use of chat.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/requestrr:latest",
      "logo": "https://github.com/darkalfx/requestrr/raw/master/Logos/requestrr_discord_Icon_512.png",
      "name": "Requestrr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/requestrr/config</p>",
      "platform": "linux",
      "ports": [
        "4545:4545/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Requestrr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/requestrr/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Resilio-sync](https://www.resilio.com/individuals/) (formerly BitTorrent Sync) uses the BitTorrent protocol to sync files and folders between all of your devices. There are both free and paid versions, this container supports both. There is an official sync image but we created this one as it supports user mapping to simplify permissions for volumes.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/resilio-sync:latest",
      "logo": "https://www.resilio.com/img/individual/freeproduct.jpg",
      "name": "Resilio-sync",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/resilio-sync/config<br>mkdir -p /volume1/docker/resilio-sync/downloads<br>mkdir -p /volume1/docker/resilio-sync/sync</p>",
      "platform": "linux",
      "ports": [
        "8888:8888/tcp",
        "55555:55555/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Resilio-sync",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/resilio-sync/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/resilio-sync/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/resilio-sync/sync",
          "container": "/sync"
        }
      ]
    },
    {
      "description": "[Rsnapshot](http://www.rsnapshot.org/) is a filesystem snapshot utility based on rsync. rsnapshot makes it easy to make periodic snapshots of local machines, and remote machines over ssh. The code makes extensive use of hard links whenever possible, to greatly reduce the disk space required.'",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/rsnapshot:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/rsnapshot.png",
      "name": "Rsnapshot",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/rsnapshot/config<br>mkdir -p /volume1/docker/rsnapshot/.snapshots<br>mkdir -p /volume1/docker/rsnapshot/data</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Rsnapshot",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/rsnapshot/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/rsnapshot/.snapshots",
          "container": "/.snapshots"
        },
        {
          "bind": "/volume1/docker/rsnapshot/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Sabnzbd](http://sabnzbd.org/) makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/sabnzbd:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sabnzbd-banner.png",
      "name": "Sabnzbd",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sabnzbd/config<br>mkdir -p /volume1/docker/sabnzbd/downloads<br>mkdir -p /volume1/docker/sabnzbd/incomplete-downloads</p>",
      "platform": "linux",
      "ports": [
        "8080:8080/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sabnzbd",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/sabnzbd/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/sabnzbd/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/sabnzbd/incomplete-downloads",
          "container": "/incomplete-downloads"
        }
      ]
    },
    {
      "description": "[Sickchill](https://github.com/SickChill/SickChill) is an Automatic Video Library Manager for TV Shows. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/sickchill:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sickchill-banner.png",
      "name": "Sickchill",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sickchill/config<br>mkdir -p /volume1/docker/sickchill/downloads<br>mkdir -p /volume1/docker/sickchill/tv</p>",
      "platform": "linux",
      "ports": [
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sickchill",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/sickchill/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/sickchill/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/sickchill/tv",
          "container": "/tv"
        }
      ]
    },
    {
      "description": "[SickGear](https://github.com/sickgear/sickgear) provides management of TV shows and/or Anime, it detects new episodes, links downloader apps, and more.. For more information on SickGear visit their website and check it out: https://github.com/SickGear/SickGear",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/sickgear:latest",
      "logo": "https://raw.githubusercontent.com/wiki/SickGear/SickGear.Wiki/images/SickGearLogo.png",
      "name": "Sickgear",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sickgear/config<br>mkdir -p /volume1/docker/sickgear/tv<br>mkdir -p /volume1/docker/sickgear/downloads</p>",
      "platform": "linux",
      "ports": [
        "8081:8081/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sickgear",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/sickgear/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/sickgear/tv",
          "container": "/tv"
        },
        {
          "bind": "/volume1/docker/sickgear/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[Smokeping](https://oss.oetiker.ch/smokeping/) keeps track of your network latency. For a full example of what this application is capable of visit [UCDavis](http://smokeping.ucdavis.edu/cgi-bin/smokeping.fcgi).",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/smokeping:latest",
      "logo": "https://camo.githubusercontent.com/e0694ef783e3fd1d74e6776b28822ced01c7cc17/687474703a2f2f6f73732e6f6574696b65722e63682f736d6f6b6570696e672f696e632f736d6f6b6570696e672d6c6f676f2e706e67",
      "name": "Smokeping",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/smokeping/config<br>mkdir -p /volume1/docker/smokeping/data</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Smokeping",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/smokeping/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/smokeping/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[Snapdrop](https://github.com/RobinLinus/snapdrop) A local file sharing in your browser. Inspired by Apple's Airdrop.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/snapdrop:latest",
      "logo": "https://raw.githubusercontent.com/RobinLinus/snapdrop/master/client/images/logo_transparent_512x512.png",
      "name": "Snapdrop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snapdrop/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Snapdrop",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/snapdrop/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Snipe-it](https://github.com/snipe/snipe-it) makes asset management easy. It was built by people solving real-world IT and asset management problems, and a solid UX has always been a top priority. Straightforward design and bulk actions mean getting things done faster.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "http://localhost:8080",
          "description": "Hostname or IP and port if applicable, be sure to define https/http",
          "label": "APP_URL",
          "name": "APP_URL"
        },
        {
          "default": "",
          "description": "Mysql hostname or IP to use",
          "label": "MYSQL_PORT_3306_TCP_ADDR",
          "name": "MYSQL_PORT_3306_TCP_ADDR"
        },
        {
          "default": "",
          "description": "Mysql port to use",
          "label": "MYSQL_PORT_3306_TCP_PORT",
          "name": "MYSQL_PORT_3306_TCP_PORT"
        },
        {
          "default": "",
          "description": "Mysql database to use",
          "label": "MYSQL_DATABASE",
          "name": "MYSQL_DATABASE"
        },
        {
          "default": "",
          "description": "Mysql user to use",
          "label": "MYSQL_USER",
          "name": "MYSQL_USER"
        },
        {
          "default": "",
          "description": "Mysql password to use",
          "label": "MYSQL_PASSWORD",
          "name": "MYSQL_PASSWORD"
        }
      ],
      "image": "linuxserver/snipe-it:latest",
      "logo": "https://s3-us-west-2.amazonaws.com/linuxserver-docs/images/snipe-it-logo500x500.png",
      "name": "Snipe-it",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/snipe-it/config</p>",
      "platform": "linux",
      "ports": [
        "8080:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Snipe-it",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/snipe-it/config",
          "container": "/config"
        }
      ]
    },
    {
      "categories": [
        "Media"
      ],
      "description": "[Sonarr](https://sonarr.tv/) (formerly NZBdrone) is a PVR for usenet and bittorrent users. It can monitor multiple RSS feeds for new episodes of your favorite shows and will grab, sort and rename them. It can also be configured to automatically upgrade the quality of files already downloaded when a better quality format becomes available.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/sonarr:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sonarr-banner.png",
      "name": "Sonarr",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sonarr/config<br>mkdir -p /volume1/docker/sonarr/tv<br>mkdir -p /volume1/docker/sonarr/downloads</p>",
      "platform": "linux",
      "ports": [
        "8989:8989/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sonarr",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/sonarr/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/sonarr/tv",
          "container": "/tv"
        },
        {
          "bind": "/volume1/docker/sonarr/downloads",
          "container": "/downloads"
        }
      ]
    },
    {
      "description": "[DB Browser for SQLite](https://sqlitebrowser.org/) is a high quality, visual, open source tool to create, design, and edit database files compatible with SQLite.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/sqlitebrowser:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/sqlitebrowser-banner.png",
      "name": "Sqlitebrowser",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/sqlitebrowser/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Sqlitebrowser",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/sqlitebrowser/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "SWAG - Secure Web Application Gateway (formerly known as letsencrypt, no relation to Let's Encrypt™) sets up an Nginx webserver and reverse proxy with php support and a built-in certbot client that automates free SSL server certificate generation and renewal processes (Let's Encrypt and ZeroSSL). It also contains fail2ban for intrusion prevention.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "yourdomain.url",
          "description": "Top url you have control over (`customdomain.com` if you own it, or `customsubdomain.ddnsprovider.com` if dynamic dns).",
          "label": "URL",
          "name": "URL"
        },
        {
          "default": "http",
          "description": "Certbot validation method to use, options are `http` or `dns` (`dns` method also requires `DNSPLUGIN` variable set).",
          "label": "VALIDATION",
          "name": "VALIDATION"
        },
        {
          "default": "www,",
          "description": "Subdomains you'd like the cert to cover (comma separated, no spaces) ie. `www,ftp,cloud`. For a wildcard cert, set this *exactly* to `wildcard` (wildcard cert is available via `dns` validation only)",
          "label": "SUBDOMAINS",
          "name": "SUBDOMAINS"
        },
        {
          "default": "",
          "description": "Optionally define the cert provider. Set to `zerossl` for ZeroSSL certs (requires existing [ZeroSSL account](https://app.zerossl.com/signup) and the e-mail address entered in `EMAIL` env var). Otherwise defaults to Let's Encrypt.",
          "label": "CERTPROVIDER",
          "name": "CERTPROVIDER"
        },
        {
          "default": "cloudflare",
          "description": "Required if `VALIDATION` is set to `dns`. Options are `acmedns`, `aliyun`, `azure`, `cloudflare`, `cpanel`, `desec`, `digitalocean`, `directadmin`, `dnsimple`, `dnsmadeeasy`, `dnspod`, `do`, `domeneshop`, `duckdns`, `dynu`, `gandi`, `gehirn`, `godaddy`, `google`, `google-domains`, `he`, `hetzner`, `infomaniak`, `inwx`, `ionos`, `linode`, `loopia`, `luadns`, `netcup`, `njalla`, `nsone`, `ovh`, `porkbun`, `rfc2136`, `route53`, `sakuracloud`, `standalone`, `transip`, and `vultr`. Also need to enter the credentials into the corresponding ini (or json for some plugins) file under `/config/dns-conf`.",
          "label": "DNSPLUGIN",
          "name": "DNSPLUGIN"
        },
        {
          "default": "",
          "description": "Optionally override (in seconds) the default propagation time for the dns plugins.",
          "label": "PROPAGATION",
          "name": "PROPAGATION"
        },
        {
          "default": "",
          "description": "Optional e-mail address used for cert expiration notifications (Required for ZeroSSL).",
          "label": "EMAIL",
          "name": "EMAIL"
        },
        {
          "default": "false",
          "description": "If you wish to get certs only for certain subdomains, but not the main domain (main domain may be hosted on another machine and cannot be validated), set this to `true`",
          "label": "ONLY_SUBDOMAINS",
          "name": "ONLY_SUBDOMAINS"
        },
        {
          "default": "",
          "description": "Additional fully qualified domain names (comma separated, no spaces) ie. `extradomain.com,subdomain.anotherdomain.org,*.anotherdomain.org`",
          "label": "EXTRA_DOMAINS",
          "name": "EXTRA_DOMAINS"
        },
        {
          "default": "false",
          "description": "Set to `true` to retrieve certs in staging mode. Rate limits will be much higher, but the resulting cert will not pass the browser's security test. Only to be used for testing purposes.",
          "label": "STAGING",
          "name": "STAGING"
        }
      ],
      "image": "linuxserver/swag:latest",
      "logo": "https://github.com/linuxserver/docker-templates/raw/master/linuxserver.io/img/swag.gif",
      "name": "Swag",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/swag/config</p>",
      "platform": "linux",
      "ports": [
        "443:443/tcp",
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Swag",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/swag/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Synclounge](https://github.com/samcm/synclounge) is a third party tool that allows you to watch Plex in sync with your friends/family, wherever you are.",
      "env": [
        {
          "default": "plexuser1,plexuser2,email1,machineid1",
          "description": "If set, only the users defined here and the users of the plex servers defined here will be able to access the server. Use e-mails, plex usernames and/or plex server machine ids, comma separated, no spaces.",
          "label": "AUTH_LIST",
          "name": "AUTH_LIST"
        },
        {
          "default": "false",
          "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set to `true` to let users autojoin the server and a room (specified by the `AUTOJOIN_ROOM` var).",
          "label": "AUTOJOIN_ENABLED",
          "name": "AUTOJOIN_ENABLED"
        },
        {
          "default": "roomname",
          "description": "DEPRECATED - (Still works but will be removed in the future in favor of the built-in var `autojoin__room`) - Set the room name for auto joining (requires `AUTOJOIN_ENABLED` set to `true`).",
          "label": "AUTOJOIN_ROOM",
          "name": "AUTOJOIN_ROOM"
        }
      ],
      "image": "linuxserver/synclounge:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/synclounge-banner.png",
      "name": "Synclounge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "platform": "linux",
      "ports": [
        "8088:8088/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Synclounge",
      "type": 1
    },
    {
      "description": "[Syncthing](https://syncthing.net) replaces proprietary sync and cloud services with something open, trustworthy and decentralized. Your data is your data alone and you deserve to choose where it is stored, if it is shared with some third party and how it's transmitted over the Internet.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/syncthing:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syncthing-banner.png",
      "name": "Syncthing",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/syncthing/config<br>mkdir -p /volume1/docker/syncthing/data1<br>mkdir -p /volume1/docker/syncthing/data2</p>",
      "platform": "linux",
      "ports": [
        "8384:8384/tcp",
        "22000:22000/tcp",
        "22000:22000/udp",
        "21027:21027/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Syncthing",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/syncthing/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/syncthing/data1",
          "container": "/data1"
        },
        {
          "bind": "/volume1/docker/syncthing/data2",
          "container": "/data2"
        }
      ]
    },
    {
      "categories": [
        "System Tools"
      ],
      "description": "[syslog-ng](https://www.syslog-ng.com/products/open-source-log-management/) allows you to flexibly collect, parse, classify, rewrite and correlate logs from across your infrastructure and store or route them to log analysis tools.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/syslog-ng:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/syslog-ng-logo.png",
      "name": "Syslog-ng",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/syslog-ng/config<br></p>",
      "platform": "linux",
      "ports": [
        "514:5514/udp",
        "601:6601/tcp",
        "6514:6514/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Syslog-ng",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/syslog-ng/config",
          "container": "/config"
        },
        {
          "bind": "/var/log",
          "container": "/var/log"
        }
      ]
    },
    {
      "description": "[Tautulli](http://tautulli.com) is a python based web application for monitoring, analytics and notifications for Plex Media Server.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/tautulli:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tautulli-icon.png",
      "name": "Tautulli",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/tautulli/config</p>",
      "platform": "linux",
      "ports": [
        "8181:8181/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tautulli",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/tautulli/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "This internal tool is used as a desktop sandbox in our CI process to grab a screenshot of a hopefully functional endpoint",
      "env": [
        {
          "default": "http://google.com",
          "description": "Specify an endpoint, the container will automatically determine the correct protocol and program to use",
          "label": "URL",
          "name": "URL"
        }
      ],
      "image": "linuxserver/tester:latest",
      "logo": "https://avatars3.githubusercontent.com/u/12324908?s=200&v=4",
      "name": "Tester",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tester",
      "type": 1
    },
    {
      "description": "[Thelounge](https://thelounge.github.io/) (a fork of shoutIRC) is a web IRC client that you host on your own server.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/thelounge:latest",
      "logo": "https://raw.githubusercontent.com/thelounge/thelounge/master/client/img/logo-vertical-transparent-bg.svg?sanitize=true",
      "name": "Thelounge",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/thelounge/config</p>",
      "platform": "linux",
      "ports": [
        "9000:9000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Thelounge",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/thelounge/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Transmission](https://www.transmissionbt.com/) is designed for easy, powerful use. Transmission has the features you want from a BitTorrent client: encryption, a web interface, peer exchange, magnet links, DHT, µTP, UPnP and NAT-PMP port forwarding, webseed support, watch directories, tracker editing, global and per-torrent speed limits, and more.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Specify the path to an alternative UI folder.",
          "label": "TRANSMISSION_WEB_HOME",
          "name": "TRANSMISSION_WEB_HOME"
        },
        {
          "default": "",
          "description": "Specify an optional username for the interface",
          "label": "USER",
          "name": "USER"
        },
        {
          "default": "",
          "description": "Specify an optional password for the interface",
          "label": "PASS",
          "name": "PASS"
        },
        {
          "default": "",
          "description": "Specify an optional list of comma separated ip whitelist. Fills rpc-whitelist setting.",
          "label": "WHITELIST",
          "name": "WHITELIST"
        },
        {
          "default": "",
          "description": "Specify an optional port for torrent TCP/UDP connections. Fills peer-port setting.",
          "label": "PEERPORT",
          "name": "PEERPORT"
        },
        {
          "default": "",
          "description": "Specify an optional list of comma separated dns name whitelist. Fills rpc-host-whitelist setting.",
          "label": "HOST_WHITELIST",
          "name": "HOST_WHITELIST"
        }
      ],
      "image": "linuxserver/transmission:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/transmission.png",
      "name": "Transmission",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/transmission/config<br>mkdir -p /volume1/docker/transmission/downloads<br>mkdir -p /volume1/docker/transmission/watch</p>",
      "platform": "linux",
      "ports": [
        "9091:9091/tcp",
        "51413:51413/tcp",
        "51413:51413/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Transmission",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/transmission/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/transmission/downloads",
          "container": "/downloads"
        },
        {
          "bind": "/volume1/docker/transmission/watch",
          "container": "/watch"
        }
      ]
    },
    {
      "description": "[Tvheadend](https://www.tvheadend.org/) works as a proxy server: is a TV streaming server and recorder for Linux, FreeBSD and Android supporting DVB-S, DVB-S2, DVB-C, DVB-T, ATSC, ISDB-T, IPTV, SAT>IP and HDHomeRun as input sources. Tvheadend offers the HTTP (VLC, MPlayer), HTSP (Kodi, Movian) and SAT>IP streaming. Multiple EPG sources are supported (over-the-air DVB and ATSC including OpenTV DVB extensions, XMLTV, PyXML).",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "Optionally specify additional arguments to be passed. See Additional runtime parameters.",
          "label": "RUN_OPTS",
          "name": "RUN_OPTS"
        }
      ],
      "image": "linuxserver/tvheadend:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/tvheadend-big.png",
      "name": "Tvheadend",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/tvheadend/config<br>mkdir -p /volume1/docker/tvheadend/recordings</p>",
      "platform": "linux",
      "ports": [
        "9981:9981/tcp",
        "9982:9982/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Tvheadend",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/tvheadend/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/tvheadend/recordings",
          "container": "/recordings"
        }
      ]
    },
    {
      "description": "[Ubooquity](https://vaemendis.net/ubooquity/) is a free, lightweight and easy-to-use home server for your comics and ebooks. Use it to access your files from anywhere, with a tablet, an e-reader, a phone or a computer.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "",
          "description": "To set the maximum memory. ( ex: set '1024' for 1GB )",
          "label": "MAXMEM",
          "name": "MAXMEM"
        }
      ],
      "image": "linuxserver/ubooquity:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/ubooquity-banner.png",
      "name": "Ubooquity",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/ubooquity/config<br>mkdir -p /volume1/docker/ubooquity/books<br>mkdir -p /volume1/docker/ubooquity/comics<br>mkdir -p /volume1/docker/ubooquity/files</p>",
      "platform": "linux",
      "ports": [
        "2202:2202/tcp",
        "2203:2203/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Ubooquity",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/ubooquity/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/ubooquity/books",
          "container": "/books"
        },
        {
          "bind": "/volume1/docker/ubooquity/comics",
          "container": "/comics"
        },
        {
          "bind": "/volume1/docker/ubooquity/files",
          "container": "/files"
        }
      ]
    },
    {
      "categories": [
        "Networking"
      ],
      "description": "The [Unifi-controller](https://www.ubnt.com/enterprise/#unifi) software is a powerful, enterprise wireless software engine ideal for high-density client deployments requiring low latency and high uptime performance.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "1024",
          "description": "Optionally change the Java memory limit (in Megabytes). Set to `default` to reset to default",
          "label": "MEM_LIMIT",
          "name": "MEM_LIMIT"
        },
        {
          "default": "1024",
          "description": "Optionally change the Java initial/minimum memory (in Megabytes). Set to `default` to reset to default",
          "label": "MEM_STARTUP",
          "name": "MEM_STARTUP"
        }
      ],
      "image": "linuxserver/unifi-controller:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/unifi-banner.png",
      "name": "Unifi-controller",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/unifi-controller/config</p>",
      "platform": "linux",
      "ports": [
        "8443:8443/tcp",
        "3478:3478/udp",
        "10001:10001/udp",
        "8080:8080/tcp",
        "1900:1900/udp",
        "8843:8843/tcp",
        "8880:8880/tcp",
        "6789:6789/tcp",
        "5514:5514/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Unifi-controller",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/unifi-controller/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[VSCodium](https://vscodium.com/) is a community-driven, freely-licensed binary distribution of Microsoft’s editor VS Code.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/vscodium:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/vscodium-icon.png",
      "name": "Vscodium",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/vscodium/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Vscodium",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/vscodium/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[WebCord](https://github.com/SpacingBat3/WebCord) can be summarized as a pack of security and privacy hardenings, Discord features reimplementations, Electron / Chromium / Discord bugs workarounds, stylesheets, internal pages and wrapped https://discord.com page, designed to conform with ToS as much as it is possible (or hide the changes that might violate it from Discord's eyes).",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/webcord:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webcord-icon.png",
      "name": "Webcord",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webcord/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Webcord",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/webcord/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Webgrabplus](http://www.webgrabplus.com) is a multi-site incremental xmltv epg grabber. It collects tv-program guide data from selected tvguide sites for your favourite channels.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/webgrabplus:latest",
      "logo": "http://www.webgrabplus.com/sites/default/themes/WgTheme/images/slideshows/EPG_fading.jpg",
      "name": "Webgrabplus",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webgrabplus/config<br>mkdir -p /volume1/docker/webgrabplus/data</p>",
      "platform": "linux",
      "restart_policy": "unless-stopped",
      "title": "Webgrabplus",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/webgrabplus/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/webgrabplus/data",
          "container": "/data"
        }
      ]
    },
    {
      "categories": [
        "Utilities"
      ],
      "description": "[Webtop](https://github.com/linuxserver/docker-webtop) - Alpine, Ubuntu, Fedora, and Arch based containers containing full desktop environments in officially supported flavors accessible via any modern web browser.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "/",
          "description": "Specify a subfolder to use with reverse proxies, IE `/subfolder/`",
          "label": "SUBFOLDER",
          "name": "SUBFOLDER"
        },
        {
          "default": "Webtop",
          "description": "String which will be used as page/tab title in the web browser.",
          "label": "TITLE",
          "name": "TITLE"
        }
      ],
      "image": "linuxserver/webtop:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/webtop-logo.png",
      "name": "Webtop",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/webtop/config<br></p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Webtop",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/webtop/config",
          "container": "/config"
        },
        {
          "bind": "/var/run/docker.sock",
          "container": "/var/run/docker.sock"
        }
      ]
    },
    {
      "description": "[Wikijs](https://github.com/Requarks/wiki) A modern, lightweight and powerful wiki app built on NodeJS.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "sqlite",
          "description": "Set to sqlite (default) or postgres depending on the database engine you wish to use",
          "label": "DB_TYPE",
          "name": "DB_TYPE"
        },
        {
          "default": "",
          "description": "DB hostname (postgres only)",
          "label": "DB_HOST",
          "name": "DB_HOST"
        },
        {
          "default": "",
          "description": "DB port (postgres only)",
          "label": "DB_PORT",
          "name": "DB_PORT"
        },
        {
          "default": "",
          "description": "DB name (postgres only)",
          "label": "DB_NAME",
          "name": "DB_NAME"
        },
        {
          "default": "",
          "description": "DB username (postgres only)",
          "label": "DB_USER",
          "name": "DB_USER"
        },
        {
          "default": "",
          "description": "DB password (postgres only)",
          "label": "DB_PASS",
          "name": "DB_PASS"
        }
      ],
      "image": "linuxserver/wikijs:latest",
      "logo": "https://static.requarks.io/logo/wikijs-full.svg",
      "name": "Wikijs",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wikijs/config<br>mkdir -p /volume1/docker/wikijs/data</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Wikijs",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/wikijs/config",
          "container": "/config"
        },
        {
          "bind": "/volume1/docker/wikijs/data",
          "container": "/data"
        }
      ]
    },
    {
      "description": "[WireGuard®](https://www.wireguard.com/) is an extremely simple yet fast and modern VPN that utilizes state-of-the-art cryptography. It aims to be faster, simpler, leaner, and more useful than IPsec, while avoiding the massive headache. It intends to be considerably more performant than OpenVPN. WireGuard is designed as a general purpose VPN for running on embedded interfaces and super computers alike, fit for many different circumstances. Initially released for the Linux kernel, it is now cross-platform (Windows, macOS, BSD, iOS, Android) and widely deployable. It is currently under heavy development, but already it might be regarded as the most secure, easiest to use, and simplest VPN solution in the industry.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "wireguard.domain.com",
          "description": "External IP or domain name for docker host. Used in server mode. If set to `auto`, the container will try to determine and set the external IP automatically",
          "label": "SERVERURL",
          "name": "SERVERURL"
        },
        {
          "default": "51820",
          "description": "External port for docker host. Used in server mode.",
          "label": "SERVERPORT",
          "name": "SERVERPORT"
        },
        {
          "default": "1",
          "description": "Number of peers to create confs for. Required for server mode. Can also be a list of names: `myPC,myPhone,myTablet` (alphanumeric only)",
          "label": "PEERS",
          "name": "PEERS"
        },
        {
          "default": "auto",
          "description": "DNS server set in peer/client configs (can be set as `8.8.8.8`). Used in server mode. Defaults to `auto`, which uses wireguard docker host's DNS via included CoreDNS forward.",
          "label": "PEERDNS",
          "name": "PEERDNS"
        },
        {
          "default": "10.13.13.0",
          "description": "Internal subnet for the wireguard and server and peers (only change if it clashes). Used in server mode.",
          "label": "INTERNAL_SUBNET",
          "name": "INTERNAL_SUBNET"
        },
        {
          "default": "0.0.0.0/0",
          "description": "The IPs/Ranges that the peers will be able to reach using the VPN connection. If not specified the default value is: '0.0.0.0/0, ::0/0' This will cause ALL traffic to route through the VPN, if you want split tunneling, set this to only the IPs you would like to use the tunnel AND the ip of the server's WG ip, such as 10.13.13.1.",
          "label": "ALLOWEDIPS",
          "name": "ALLOWEDIPS"
        },
        {
          "default": "",
          "description": "Set to `all` or a list of comma separated peers (ie. `1,4,laptop`) for the wireguard server to send keepalive packets to listed peers every 25 seconds. Useful if server is accessed via domain name and has dynamic IP. Used only in server mode.",
          "label": "PERSISTENTKEEPALIVE_PEERS",
          "name": "PERSISTENTKEEPALIVE_PEERS"
        },
        {
          "default": "true",
          "description": "Generated QR codes will be displayed in the docker log. Set to `false` to skip log output.",
          "label": "LOG_CONFS",
          "name": "LOG_CONFS"
        }
      ],
      "image": "linuxserver/wireguard:latest",
      "logo": "https://www.wireguard.com/img/wireguard.svg",
      "name": "Wireguard",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireguard/config</p>",
      "platform": "linux",
      "ports": [
        "51820:51820/udp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Wireguard",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/wireguard/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Wireshark](https://www.wireshark.org/) is the world’s foremost and widely-used network protocol analyzer. It lets you see what’s happening on your network at a microscopic level and is the de facto (and often de jure) standard across many commercial and non-profit enterprises, government agencies, and educational institutions. Wireshark development thrives thanks to the volunteer contributions of networking experts around the globe and is the continuation of a project started by Gerald Combs in 1998.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/wireshark:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wireshark-icon.png",
      "name": "Wireshark",
      "network": "host",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wireshark/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Wireshark",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/wireshark/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[WPS Office](https://www.wps.com/) is a lightweight, feature-rich comprehensive office suite with high compatibility. As a handy and professional office software, WPS Office allows you to edit files in Writer, Presentation, Spreadsheet, and PDF to improve your work efficiency.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/wps-office:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/wps-office-icon.png",
      "name": "Wps-office",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/wps-office/config</p>",
      "platform": "linux",
      "ports": [
        "3000:3000/tcp",
        "3001:3001/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Wps-office",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/wps-office/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Xbackbone](https://github.com/SergiX44/XBackBone) is a simple, self-hosted, lightweight PHP file manager that support the instant sharing tool ShareX and *NIX systems. It supports uploading and displaying images, GIF, video, code, formatted text, and file downloading and uploading. Also have a web UI with multi user management, past uploads history and search support.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/xbackbone:latest",
      "logo": "https://raw.githubusercontent.com/SergiX44/XBackBone/master/docs/img/xbackbone.png",
      "name": "Xbackbone",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/xbackbone/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Xbackbone",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/xbackbone/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Your_spotify](https://github.com/Yooooomi/your_spotify) is a self-hosted application that tracks what you listen and offers you a dashboard to explore statistics about it! It's composed of a web server which polls the Spotify API every now and then and a web application on which you can explore your statistics.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        },
        {
          "default": "http://localhost",
          "description": "The protocol and hostname where the app will be accessed.",
          "label": "APP_URL",
          "name": "APP_URL"
        },
        {
          "default": "",
          "description": "Your Spotify application client ID.",
          "label": "SPOTIFY_PUBLIC",
          "name": "SPOTIFY_PUBLIC"
        },
        {
          "default": "",
          "description": "Your Spotify application secret.",
          "label": "SPOTIFY_SECRET",
          "name": "SPOTIFY_SECRET"
        },
        {
          "default": "http://localhost:80,https://localhost:443",
          "description": "Allowed CORS sources, set to `all` to allow any source.",
          "label": "CORS",
          "name": "CORS"
        },
        {
          "default": "mongodb://mongo:27017/your_spotify",
          "description": "Set mongodb endpoint address/port.",
          "label": "MONGO_ENDPOINT",
          "name": "MONGO_ENDPOINT"
        }
      ],
      "image": "linuxserver/your_spotify:latest",
      "logo": "https://raw.githubusercontent.com/linuxserver/docker-templates/master/linuxserver.io/img/your_spotify-logo.png",
      "name": "Your_spotify",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp",
        "443:443/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Your_spotify",
      "type": 1
    },
    {
      "description": "This container needs special attention. Please check https://hub.docker.com/r/linuxserver/yq for details.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/yq:latest",
      "logo": "",
      "name": "Yq",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/yq/config</p>",
      "platform": "linux",
      "ports": [
        "80:80/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Yq",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/yq/config",
          "container": "/config"
        }
      ]
    },
    {
      "description": "[Znc](http://wiki.znc.in/ZNC) is an IRC network bouncer or BNC. It can detach the client from the actual IRC server, and also from selected channels. Multiple clients from different locations can connect to a single ZNC account simultaneously and therefore appear under the same nickname on IRC.",
      "env": [
        {
          "default": "1024",
          "description": "for UserID",
          "label": "PUID",
          "name": "PUID"
        },
        {
          "default": "100",
          "description": "for GroupID",
          "label": "PGID",
          "name": "PGID"
        },
        {
          "default": "America/Toronto",
          "description": "specify a timezone to use, see this [list](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones#List).",
          "label": "TZ",
          "name": "TZ"
        }
      ],
      "image": "linuxserver/znc:latest",
      "logo": "http://wiki.znc.in/resources/assets/wiki.png",
      "name": "Znc",
      "note": "Portainer App Templates by <a href='https://www.technorabilia.com' target='_blank'>Technorabilia</a> based on data provided by <a href='https://www.linuxserver.io' target='_blank'>LinuxServer.io</a>.</p><p>Don't forget to create the volume directories on the host file system.</p><p>mkdir -p /volume1/docker/znc/config</p>",
      "platform": "linux",
      "ports": [
        "6501:6501/tcp"
      ],
      "restart_policy": "unless-stopped",
      "title": "Znc",
      "type": 1,
      "volumes": [
        {
          "bind": "/volume1/docker/znc/config",
          "container": "/config"
        }
      ]
    }
  ],
  "version": "2"
}
